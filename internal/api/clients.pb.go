// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: clients.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientsMS_Bool int32

const (
	ClientsMS_Bool_IS_ANY   ClientsMS_Bool = 0
	ClientsMS_Bool_IS_FALSE ClientsMS_Bool = 1
	ClientsMS_Bool_IS_TRUE  ClientsMS_Bool = 2
)

// Enum value maps for ClientsMS_Bool.
var (
	ClientsMS_Bool_name = map[int32]string{
		0: "IS_ANY",
		1: "IS_FALSE",
		2: "IS_TRUE",
	}
	ClientsMS_Bool_value = map[string]int32{
		"IS_ANY":   0,
		"IS_FALSE": 1,
		"IS_TRUE":  2,
	}
)

func (x ClientsMS_Bool) Enum() *ClientsMS_Bool {
	p := new(ClientsMS_Bool)
	*p = x
	return p
}

func (x ClientsMS_Bool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientsMS_Bool) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[0].Descriptor()
}

func (ClientsMS_Bool) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[0]
}

func (x ClientsMS_Bool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientsMS_Bool.Descriptor instead.
func (ClientsMS_Bool) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{0}
}

// Order type for all entities
type ClientsMS_OrderType int32

const (
	ClientsMS_OrderType_ASC  ClientsMS_OrderType = 0
	ClientsMS_OrderType_DESC ClientsMS_OrderType = 1
)

// Enum value maps for ClientsMS_OrderType.
var (
	ClientsMS_OrderType_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	ClientsMS_OrderType_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x ClientsMS_OrderType) Enum() *ClientsMS_OrderType {
	p := new(ClientsMS_OrderType)
	*p = x
	return p
}

func (x ClientsMS_OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientsMS_OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[1].Descriptor()
}

func (ClientsMS_OrderType) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[1]
}

func (x ClientsMS_OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientsMS_OrderType.Descriptor instead.
func (ClientsMS_OrderType) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{1}
}

// Countries
type ClientsMS_CountryOrder int32

const (
	ClientsMS_CountryOrder_BY_COUNTRY_ID         ClientsMS_CountryOrder = 0
	ClientsMS_CountryOrder_BY_COUNTRY_NAME       ClientsMS_CountryOrder = 1
	ClientsMS_CountryOrder_BY_COUNTRY_CREATED_AT ClientsMS_CountryOrder = 2
	ClientsMS_CountryOrder_BY_COUNTRY_UPDATED_AT ClientsMS_CountryOrder = 3
)

// Enum value maps for ClientsMS_CountryOrder.
var (
	ClientsMS_CountryOrder_name = map[int32]string{
		0: "BY_COUNTRY_ID",
		1: "BY_COUNTRY_NAME",
		2: "BY_COUNTRY_CREATED_AT",
		3: "BY_COUNTRY_UPDATED_AT",
	}
	ClientsMS_CountryOrder_value = map[string]int32{
		"BY_COUNTRY_ID":         0,
		"BY_COUNTRY_NAME":       1,
		"BY_COUNTRY_CREATED_AT": 2,
		"BY_COUNTRY_UPDATED_AT": 3,
	}
)

func (x ClientsMS_CountryOrder) Enum() *ClientsMS_CountryOrder {
	p := new(ClientsMS_CountryOrder)
	*p = x
	return p
}

func (x ClientsMS_CountryOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientsMS_CountryOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[2].Descriptor()
}

func (ClientsMS_CountryOrder) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[2]
}

func (x ClientsMS_CountryOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientsMS_CountryOrder.Descriptor instead.
func (ClientsMS_CountryOrder) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{2}
}

// Address type
type ClientsMS_AddressTypesOrder int32

const (
	ClientsMS_AddressTypesOrder_BY_ADDRESS_TYPE_ID         ClientsMS_AddressTypesOrder = 0
	ClientsMS_AddressTypesOrder_BY_ADDRESS_TYPE_NAME       ClientsMS_AddressTypesOrder = 1
	ClientsMS_AddressTypesOrder_BY_ADDRESS_TYPE_CODE       ClientsMS_AddressTypesOrder = 2
	ClientsMS_AddressTypesOrder_BY_ADDRESS_TYPE_CREATED_AT ClientsMS_AddressTypesOrder = 3
	ClientsMS_AddressTypesOrder_BY_ADDRESS_TYPE_UPDATED_AT ClientsMS_AddressTypesOrder = 4
)

// Enum value maps for ClientsMS_AddressTypesOrder.
var (
	ClientsMS_AddressTypesOrder_name = map[int32]string{
		0: "BY_ADDRESS_TYPE_ID",
		1: "BY_ADDRESS_TYPE_NAME",
		2: "BY_ADDRESS_TYPE_CODE",
		3: "BY_ADDRESS_TYPE_CREATED_AT",
		4: "BY_ADDRESS_TYPE_UPDATED_AT",
	}
	ClientsMS_AddressTypesOrder_value = map[string]int32{
		"BY_ADDRESS_TYPE_ID":         0,
		"BY_ADDRESS_TYPE_NAME":       1,
		"BY_ADDRESS_TYPE_CODE":       2,
		"BY_ADDRESS_TYPE_CREATED_AT": 3,
		"BY_ADDRESS_TYPE_UPDATED_AT": 4,
	}
)

func (x ClientsMS_AddressTypesOrder) Enum() *ClientsMS_AddressTypesOrder {
	p := new(ClientsMS_AddressTypesOrder)
	*p = x
	return p
}

func (x ClientsMS_AddressTypesOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientsMS_AddressTypesOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[3].Descriptor()
}

func (ClientsMS_AddressTypesOrder) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[3]
}

func (x ClientsMS_AddressTypesOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientsMS_AddressTypesOrder.Descriptor instead.
func (ClientsMS_AddressTypesOrder) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{3}
}

// Deliveries
type ClientsMS_DeliveriesOrder int32

const (
	ClientsMS_DeliveriesOrder_BY_DELIVERY_ID         ClientsMS_DeliveriesOrder = 0
	ClientsMS_DeliveriesOrder_BY_DELIVERY_NAME       ClientsMS_DeliveriesOrder = 1
	ClientsMS_DeliveriesOrder_BY_DELIVERY_CREATED_AT ClientsMS_DeliveriesOrder = 2
	ClientsMS_DeliveriesOrder_BY_DELIVERY_UPDATED_AT ClientsMS_DeliveriesOrder = 3
)

// Enum value maps for ClientsMS_DeliveriesOrder.
var (
	ClientsMS_DeliveriesOrder_name = map[int32]string{
		0: "BY_DELIVERY_ID",
		1: "BY_DELIVERY_NAME",
		2: "BY_DELIVERY_CREATED_AT",
		3: "BY_DELIVERY_UPDATED_AT",
	}
	ClientsMS_DeliveriesOrder_value = map[string]int32{
		"BY_DELIVERY_ID":         0,
		"BY_DELIVERY_NAME":       1,
		"BY_DELIVERY_CREATED_AT": 2,
		"BY_DELIVERY_UPDATED_AT": 3,
	}
)

func (x ClientsMS_DeliveriesOrder) Enum() *ClientsMS_DeliveriesOrder {
	p := new(ClientsMS_DeliveriesOrder)
	*p = x
	return p
}

func (x ClientsMS_DeliveriesOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientsMS_DeliveriesOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[4].Descriptor()
}

func (ClientsMS_DeliveriesOrder) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[4]
}

func (x ClientsMS_DeliveriesOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientsMS_DeliveriesOrder.Descriptor instead.
func (ClientsMS_DeliveriesOrder) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{4}
}

// Notes
type ClientsMS_NotesOrder int32

const (
	ClientsMS_NotesOrder_BY_NOTE_ID         ClientsMS_NotesOrder = 0
	ClientsMS_NotesOrder_BY_NOTE_CREATED_AT ClientsMS_NotesOrder = 1
	ClientsMS_NotesOrder_BY_NOTE_UPDATED_AT ClientsMS_NotesOrder = 2
)

// Enum value maps for ClientsMS_NotesOrder.
var (
	ClientsMS_NotesOrder_name = map[int32]string{
		0: "BY_NOTE_ID",
		1: "BY_NOTE_CREATED_AT",
		2: "BY_NOTE_UPDATED_AT",
	}
	ClientsMS_NotesOrder_value = map[string]int32{
		"BY_NOTE_ID":         0,
		"BY_NOTE_CREATED_AT": 1,
		"BY_NOTE_UPDATED_AT": 2,
	}
)

func (x ClientsMS_NotesOrder) Enum() *ClientsMS_NotesOrder {
	p := new(ClientsMS_NotesOrder)
	*p = x
	return p
}

func (x ClientsMS_NotesOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientsMS_NotesOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[5].Descriptor()
}

func (ClientsMS_NotesOrder) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[5]
}

func (x ClientsMS_NotesOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientsMS_NotesOrder.Descriptor instead.
func (ClientsMS_NotesOrder) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{5}
}

// Addresses
type ClientsMS_AddressesOrder int32

const (
	ClientsMS_AddressesOrder_BY_ADDRESS_ID         ClientsMS_AddressesOrder = 0
	ClientsMS_AddressesOrder_BY_ADDRESS_ADDRESS    ClientsMS_AddressesOrder = 1
	ClientsMS_AddressesOrder_BY_ADDRESS_CREATED_AT ClientsMS_AddressesOrder = 2
	ClientsMS_AddressesOrder_BY_ADDRESS_UPDATED_AT ClientsMS_AddressesOrder = 3
)

// Enum value maps for ClientsMS_AddressesOrder.
var (
	ClientsMS_AddressesOrder_name = map[int32]string{
		0: "BY_ADDRESS_ID",
		1: "BY_ADDRESS_ADDRESS",
		2: "BY_ADDRESS_CREATED_AT",
		3: "BY_ADDRESS_UPDATED_AT",
	}
	ClientsMS_AddressesOrder_value = map[string]int32{
		"BY_ADDRESS_ID":         0,
		"BY_ADDRESS_ADDRESS":    1,
		"BY_ADDRESS_CREATED_AT": 2,
		"BY_ADDRESS_UPDATED_AT": 3,
	}
)

func (x ClientsMS_AddressesOrder) Enum() *ClientsMS_AddressesOrder {
	p := new(ClientsMS_AddressesOrder)
	*p = x
	return p
}

func (x ClientsMS_AddressesOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientsMS_AddressesOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_clients_proto_enumTypes[6].Descriptor()
}

func (ClientsMS_AddressesOrder) Type() protoreflect.EnumType {
	return &file_clients_proto_enumTypes[6]
}

func (x ClientsMS_AddressesOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientsMS_AddressesOrder.Descriptor instead.
func (ClientsMS_AddressesOrder) EnumDescriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{6}
}

// =============== //
//
//	Countries     //
//
// =============== //
type RequestCountry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string         `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	Id        uint64         `protobuf:"fixed64,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Name      string         `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Comment   string         `protobuf:"bytes,4,opt,name=Comment,proto3" json:"Comment,omitempty"`
	IsDeleted ClientsMS_Bool `protobuf:"varint,5,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	// Order in query
	Order     ClientsMS_CountryOrder `protobuf:"varint,6,opt,name=Order,proto3,enum=clients.ClientsMS_CountryOrder" json:"Order,omitempty"`
	OrderType ClientsMS_OrderType    `protobuf:"varint,7,opt,name=OrderType,proto3,enum=clients.ClientsMS_OrderType" json:"OrderType,omitempty"`
	// AuthorId needed to create and update
	AuthorId uint64 `protobuf:"fixed64,8,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
}

func (x *RequestCountry) Reset() {
	*x = RequestCountry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCountry) ProtoMessage() {}

func (x *RequestCountry) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCountry.ProtoReflect.Descriptor instead.
func (*RequestCountry) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{0}
}

func (x *RequestCountry) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestCountry) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestCountry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestCountry) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RequestCountry) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestCountry) GetOrder() ClientsMS_CountryOrder {
	if x != nil {
		return x.Order
	}
	return ClientsMS_CountryOrder_BY_COUNTRY_ID
}

func (x *RequestCountry) GetOrderType() ClientsMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return ClientsMS_OrderType_ASC
}

func (x *RequestCountry) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type RequestCountriesDeletionFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string         `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64         `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsDeleted ClientsMS_Bool `protobuf:"varint,3,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Ids       []uint64       `protobuf:"fixed64,4,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *RequestCountriesDeletionFlags) Reset() {
	*x = RequestCountriesDeletionFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestCountriesDeletionFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCountriesDeletionFlags) ProtoMessage() {}

func (x *RequestCountriesDeletionFlags) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCountriesDeletionFlags.ProtoReflect.Descriptor instead.
func (*RequestCountriesDeletionFlags) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{1}
}

func (x *RequestCountriesDeletionFlags) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestCountriesDeletionFlags) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestCountriesDeletionFlags) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestCountriesDeletionFlags) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// =============== //
// Address types   //
// =============== //
type RequestAddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken        string                      `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	Id               uint64                      `protobuf:"fixed64,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Code             string                      `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Name             string                      `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Comment          string                      `protobuf:"bytes,5,opt,name=Comment,proto3" json:"Comment,omitempty"`
	NeedsCleaning    ClientsMS_Bool              `protobuf:"varint,6,opt,name=NeedsCleaning,proto3,enum=clients.ClientsMS_Bool" json:"NeedsCleaning,omitempty"`
	NeedsNormalizing ClientsMS_Bool              `protobuf:"varint,7,opt,name=NeedsNormalizing,proto3,enum=clients.ClientsMS_Bool" json:"NeedsNormalizing,omitempty"`
	IsDeleted        ClientsMS_Bool              `protobuf:"varint,8,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	AuthorId         uint64                      `protobuf:"fixed64,9,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Order            ClientsMS_AddressTypesOrder `protobuf:"varint,10,opt,name=Order,proto3,enum=clients.ClientsMS_AddressTypesOrder" json:"Order,omitempty"`
	OrderType        ClientsMS_OrderType         `protobuf:"varint,11,opt,name=OrderType,proto3,enum=clients.ClientsMS_OrderType" json:"OrderType,omitempty"`
}

func (x *RequestAddressType) Reset() {
	*x = RequestAddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAddressType) ProtoMessage() {}

func (x *RequestAddressType) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAddressType.ProtoReflect.Descriptor instead.
func (*RequestAddressType) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{2}
}

func (x *RequestAddressType) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestAddressType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestAddressType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RequestAddressType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestAddressType) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RequestAddressType) GetNeedsCleaning() ClientsMS_Bool {
	if x != nil {
		return x.NeedsCleaning
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddressType) GetNeedsNormalizing() ClientsMS_Bool {
	if x != nil {
		return x.NeedsNormalizing
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddressType) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddressType) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestAddressType) GetOrder() ClientsMS_AddressTypesOrder {
	if x != nil {
		return x.Order
	}
	return ClientsMS_AddressTypesOrder_BY_ADDRESS_TYPE_ID
}

func (x *RequestAddressType) GetOrderType() ClientsMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return ClientsMS_OrderType_ASC
}

type RequestAddressesTypesDeletionFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string         `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64         `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsDeleted ClientsMS_Bool `protobuf:"varint,3,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Ids       []uint64       `protobuf:"fixed64,4,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *RequestAddressesTypesDeletionFlags) Reset() {
	*x = RequestAddressesTypesDeletionFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAddressesTypesDeletionFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAddressesTypesDeletionFlags) ProtoMessage() {}

func (x *RequestAddressesTypesDeletionFlags) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAddressesTypesDeletionFlags.ProtoReflect.Descriptor instead.
func (*RequestAddressesTypesDeletionFlags) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{3}
}

func (x *RequestAddressesTypesDeletionFlags) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestAddressesTypesDeletionFlags) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestAddressesTypesDeletionFlags) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddressesTypesDeletionFlags) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// =============== //
//
//	Deliveries     //
//
// =============== //
type RequestDelivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string                    `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64                    `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Id        uint64                    `protobuf:"fixed64,3,opt,name=Id,proto3" json:"Id,omitempty"`
	Name      string                    `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Comment   string                    `protobuf:"bytes,5,opt,name=Comment,proto3" json:"Comment,omitempty"`
	IsDeleted ClientsMS_Bool            `protobuf:"varint,6,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Order     ClientsMS_DeliveriesOrder `protobuf:"varint,7,opt,name=Order,proto3,enum=clients.ClientsMS_DeliveriesOrder" json:"Order,omitempty"`
	OrderType ClientsMS_OrderType       `protobuf:"varint,8,opt,name=OrderType,proto3,enum=clients.ClientsMS_OrderType" json:"OrderType,omitempty"`
}

func (x *RequestDelivery) Reset() {
	*x = RequestDelivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDelivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDelivery) ProtoMessage() {}

func (x *RequestDelivery) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDelivery.ProtoReflect.Descriptor instead.
func (*RequestDelivery) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{4}
}

func (x *RequestDelivery) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestDelivery) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestDelivery) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestDelivery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestDelivery) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RequestDelivery) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestDelivery) GetOrder() ClientsMS_DeliveriesOrder {
	if x != nil {
		return x.Order
	}
	return ClientsMS_DeliveriesOrder_BY_DELIVERY_ID
}

func (x *RequestDelivery) GetOrderType() ClientsMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return ClientsMS_OrderType_ASC
}

type RequestDeliveriesDeletionFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string         `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64         `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsDeleted ClientsMS_Bool `protobuf:"varint,3,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Ids       []uint64       `protobuf:"fixed64,4,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *RequestDeliveriesDeletionFlags) Reset() {
	*x = RequestDeliveriesDeletionFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDeliveriesDeletionFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDeliveriesDeletionFlags) ProtoMessage() {}

func (x *RequestDeliveriesDeletionFlags) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDeliveriesDeletionFlags.ProtoReflect.Descriptor instead.
func (*RequestDeliveriesDeletionFlags) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{5}
}

func (x *RequestDeliveriesDeletionFlags) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestDeliveriesDeletionFlags) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestDeliveriesDeletionFlags) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestDeliveriesDeletionFlags) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// =============== //
//
//	Notes         //
//
// =============== //
type RequestNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string               `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64               `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Id        uint64               `protobuf:"fixed64,3,opt,name=Id,proto3" json:"Id,omitempty"`
	ClientId  uint64               `protobuf:"fixed64,4,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	NoteText  string               `protobuf:"bytes,5,opt,name=NoteText,proto3" json:"NoteText,omitempty"`
	IsDeleted ClientsMS_Bool       `protobuf:"varint,6,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Order     ClientsMS_NotesOrder `protobuf:"varint,7,opt,name=Order,proto3,enum=clients.ClientsMS_NotesOrder" json:"Order,omitempty"`
	OrderType ClientsMS_OrderType  `protobuf:"varint,8,opt,name=OrderType,proto3,enum=clients.ClientsMS_OrderType" json:"OrderType,omitempty"`
}

func (x *RequestNote) Reset() {
	*x = RequestNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestNote) ProtoMessage() {}

func (x *RequestNote) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestNote.ProtoReflect.Descriptor instead.
func (*RequestNote) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{6}
}

func (x *RequestNote) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestNote) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestNote) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestNote) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *RequestNote) GetNoteText() string {
	if x != nil {
		return x.NoteText
	}
	return ""
}

func (x *RequestNote) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestNote) GetOrder() ClientsMS_NotesOrder {
	if x != nil {
		return x.Order
	}
	return ClientsMS_NotesOrder_BY_NOTE_ID
}

func (x *RequestNote) GetOrderType() ClientsMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return ClientsMS_OrderType_ASC
}

type RequestNotesDeletionFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string         `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64         `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsDeleted ClientsMS_Bool `protobuf:"varint,3,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Ids       []uint64       `protobuf:"fixed64,4,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *RequestNotesDeletionFlags) Reset() {
	*x = RequestNotesDeletionFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestNotesDeletionFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestNotesDeletionFlags) ProtoMessage() {}

func (x *RequestNotesDeletionFlags) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestNotesDeletionFlags.ProtoReflect.Descriptor instead.
func (*RequestNotesDeletionFlags) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{7}
}

func (x *RequestNotesDeletionFlags) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestNotesDeletionFlags) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestNotesDeletionFlags) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestNotesDeletionFlags) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// =============== //
//
//	Addresses     //
//
// =============== //
type RequestAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken         string                   `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId          uint64                   `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Id                uint64                   `protobuf:"fixed64,3,opt,name=Id,proto3" json:"Id,omitempty"`
	Address           string                   `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	AddressTypeId     uint64                   `protobuf:"fixed64,5,opt,name=AddressTypeId,proto3" json:"AddressTypeId,omitempty"`
	DeliveryId        uint64                   `protobuf:"fixed64,6,opt,name=DeliveryId,proto3" json:"DeliveryId,omitempty"`
	ClientId          uint64                   `protobuf:"fixed64,7,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	PostCode          string                   `protobuf:"bytes,8,opt,name=PostCode,proto3" json:"PostCode,omitempty"`
	Timezone          string                   `protobuf:"bytes,9,opt,name=Timezone,proto3" json:"Timezone,omitempty"`
	CountryId         uint64                   `protobuf:"fixed64,10,opt,name=CountryId,proto3" json:"CountryId,omitempty"`
	Comment           string                   `protobuf:"bytes,11,opt,name=Comment,proto3" json:"Comment,omitempty"`
	IsQualityByDadata ClientsMS_Bool           `protobuf:"varint,12,opt,name=IsQualityByDadata,proto3,enum=clients.ClientsMS_Bool" json:"IsQualityByDadata,omitempty"`
	IsValidByPost     ClientsMS_Bool           `protobuf:"varint,13,opt,name=IsValidByPost,proto3,enum=clients.ClientsMS_Bool" json:"IsValidByPost,omitempty"`
	IsLast            ClientsMS_Bool           `protobuf:"varint,14,opt,name=IsLast,proto3,enum=clients.ClientsMS_Bool" json:"IsLast,omitempty"`
	IsDeleted         ClientsMS_Bool           `protobuf:"varint,15,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Order             ClientsMS_AddressesOrder `protobuf:"varint,16,opt,name=Order,proto3,enum=clients.ClientsMS_AddressesOrder" json:"Order,omitempty"`
	OrderType         ClientsMS_OrderType      `protobuf:"varint,17,opt,name=OrderType,proto3,enum=clients.ClientsMS_OrderType" json:"OrderType,omitempty"`
	AddressJson       string                   `protobuf:"bytes,18,opt,name=AddressJson,proto3" json:"AddressJson,omitempty"`
}

func (x *RequestAddress) Reset() {
	*x = RequestAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAddress) ProtoMessage() {}

func (x *RequestAddress) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAddress.ProtoReflect.Descriptor instead.
func (*RequestAddress) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{8}
}

func (x *RequestAddress) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestAddress) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestAddress) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RequestAddress) GetAddressTypeId() uint64 {
	if x != nil {
		return x.AddressTypeId
	}
	return 0
}

func (x *RequestAddress) GetDeliveryId() uint64 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *RequestAddress) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *RequestAddress) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *RequestAddress) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *RequestAddress) GetCountryId() uint64 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *RequestAddress) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RequestAddress) GetIsQualityByDadata() ClientsMS_Bool {
	if x != nil {
		return x.IsQualityByDadata
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddress) GetIsValidByPost() ClientsMS_Bool {
	if x != nil {
		return x.IsValidByPost
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddress) GetIsLast() ClientsMS_Bool {
	if x != nil {
		return x.IsLast
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddress) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddress) GetOrder() ClientsMS_AddressesOrder {
	if x != nil {
		return x.Order
	}
	return ClientsMS_AddressesOrder_BY_ADDRESS_ID
}

func (x *RequestAddress) GetOrderType() ClientsMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return ClientsMS_OrderType_ASC
}

func (x *RequestAddress) GetAddressJson() string {
	if x != nil {
		return x.AddressJson
	}
	return ""
}

type RequestAddressesDeletionFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string         `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64         `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsDeleted ClientsMS_Bool `protobuf:"varint,3,opt,name=IsDeleted,proto3,enum=clients.ClientsMS_Bool" json:"IsDeleted,omitempty"`
	Ids       []uint64       `protobuf:"fixed64,4,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *RequestAddressesDeletionFlags) Reset() {
	*x = RequestAddressesDeletionFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAddressesDeletionFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAddressesDeletionFlags) ProtoMessage() {}

func (x *RequestAddressesDeletionFlags) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAddressesDeletionFlags.ProtoReflect.Descriptor instead.
func (*RequestAddressesDeletionFlags) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{9}
}

func (x *RequestAddressesDeletionFlags) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestAddressesDeletionFlags) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestAddressesDeletionFlags) GetIsDeleted() ClientsMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return ClientsMS_Bool_IS_ANY
}

func (x *RequestAddressesDeletionFlags) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// =============== //
//
//	Status        //
//
// =============== //
type ClientsMS_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ClientsMS_Status) Reset() {
	*x = ClientsMS_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientsMS_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientsMS_Status) ProtoMessage() {}

func (x *ClientsMS_Status) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientsMS_Status.ProtoReflect.Descriptor instead.
func (*ClientsMS_Status) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{10}
}

func (x *ClientsMS_Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ClientsMS_Status) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// =============== //
//
//	Countries     //
//
// =============== //
type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"country_id"
	Id uint64 `protobuf:"fixed64,1,opt,name=Id,proto3" json:"Id,omitempty" db:"country_id"`
	// @gotags: db:"country_name"
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" db:"country_name"`
	// @gotags: db:"country_comment"
	Comment string `protobuf:"bytes,3,opt,name=Comment,proto3" json:"Comment,omitempty" db:"country_comment"`
	// @gotags: db:"country_created_at"
	CreatedAt string `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"country_created_at"`
	// @gotags: db:"country_created_by"
	CreatedBy uint64 `protobuf:"fixed64,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"country_created_by"`
	// @gotags: db:"country_created_by_name"
	CreatedByName string `protobuf:"bytes,6,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"country_created_by_name"`
	// @gotags: db:"country_updated_at"
	UpdatedAt string `protobuf:"bytes,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" db:"country_updated_at"`
	// @gotags: db:"country_updated_by"
	UpdatedBy uint64 `protobuf:"fixed64,8,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty" db:"country_updated_by"`
	// @gotags: db:"country_updated_by_name"
	UpdatedByName string `protobuf:"bytes,9,opt,name=UpdatedByName,proto3" json:"UpdatedByName,omitempty" db:"country_updated_by_name"`
	// @gotags: db:"country_isdeleted"
	IsDeleted bool `protobuf:"varint,10,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"country_isdeleted"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{11}
}

func (x *Country) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Country) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Country) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Country) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Country) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Country) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Country) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Country) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Country) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type ResponseCountries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countries []*Country        `protobuf:"bytes,1,rep,name=Countries,proto3" json:"Countries,omitempty"`
	Status    *ClientsMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseCountries) Reset() {
	*x = ResponseCountries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCountries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCountries) ProtoMessage() {}

func (x *ResponseCountries) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCountries.ProtoReflect.Descriptor instead.
func (*ResponseCountries) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseCountries) GetCountries() []*Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *ResponseCountries) GetStatus() *ClientsMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =============== //
// Address types   //
// =============== //
type AddressType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"address_type_id"
	Id uint64 `protobuf:"fixed64,1,opt,name=Id,proto3" json:"Id,omitempty" db:"address_type_id"`
	// @gotags: db:"address_type_name"
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" db:"address_type_name"`
	// @gotags: db:"address_type_code"
	Code string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty" db:"address_type_code"`
	// @gotags: db:"address_type_comment"
	Comment string `protobuf:"bytes,4,opt,name=Comment,proto3" json:"Comment,omitempty" db:"address_type_comment"`
	// @gotags: db:"address_type_needs_normalizing"
	NeedsNormalizing bool `protobuf:"varint,5,opt,name=NeedsNormalizing,proto3" json:"NeedsNormalizing,omitempty" db:"address_type_needs_normalizing"`
	// @gotags: db:"address_type_needs_cleaning"
	NeedsCleaning bool `protobuf:"varint,6,opt,name=NeedsCleaning,proto3" json:"NeedsCleaning,omitempty" db:"address_type_needs_cleaning"`
	// @gotags: db:"address_type_isdeleted"
	IsDeleted bool `protobuf:"varint,7,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"address_type_isdeleted"`
	// @gotags: db:"address_type_created_at"
	CreatedAt string `protobuf:"bytes,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"address_type_created_at"`
	// @gotags: db:"address_type_created_by"
	CreatedBy uint64 `protobuf:"fixed64,9,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"address_type_created_by"`
	// @gotags: db:"address_type_created_by_name"
	CreatedByName string `protobuf:"bytes,10,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"address_type_created_by_name"`
	// @gotags: db:"address_type_updated_at"
	UpdatedAt string `protobuf:"bytes,11,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" db:"address_type_updated_at"`
	// @gotags: db:"address_type_updated_by"
	UpdatedBy uint64 `protobuf:"fixed64,12,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty" db:"address_type_updated_by"`
	// @gotags: db:"address_type_updated_by_name"
	UpdatedByName string `protobuf:"bytes,13,opt,name=UpdatedByName,proto3" json:"UpdatedByName,omitempty" db:"address_type_updated_by_name"`
}

func (x *AddressType) Reset() {
	*x = AddressType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressType) ProtoMessage() {}

func (x *AddressType) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressType.ProtoReflect.Descriptor instead.
func (*AddressType) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{13}
}

func (x *AddressType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddressType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddressType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddressType) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *AddressType) GetNeedsNormalizing() bool {
	if x != nil {
		return x.NeedsNormalizing
	}
	return false
}

func (x *AddressType) GetNeedsCleaning() bool {
	if x != nil {
		return x.NeedsCleaning
	}
	return false
}

func (x *AddressType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *AddressType) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AddressType) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *AddressType) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *AddressType) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *AddressType) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *AddressType) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

type ResponseAddressesTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressesTypes []*AddressType    `protobuf:"bytes,1,rep,name=AddressesTypes,proto3" json:"AddressesTypes,omitempty"`
	Status         *ClientsMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseAddressesTypes) Reset() {
	*x = ResponseAddressesTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAddressesTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAddressesTypes) ProtoMessage() {}

func (x *ResponseAddressesTypes) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAddressesTypes.ProtoReflect.Descriptor instead.
func (*ResponseAddressesTypes) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseAddressesTypes) GetAddressesTypes() []*AddressType {
	if x != nil {
		return x.AddressesTypes
	}
	return nil
}

func (x *ResponseAddressesTypes) GetStatus() *ClientsMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =============== //
//
//	Deliveries     //
//
// =============== //
type Delivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"delivery_id"
	Id uint64 `protobuf:"fixed64,1,opt,name=Id,proto3" json:"Id,omitempty" db:"delivery_id"`
	// @gotags: db:"delivery_name"
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" db:"delivery_name"`
	// @gotags: db:"delivery_comment"
	Comment string `protobuf:"bytes,3,opt,name=Comment,proto3" json:"Comment,omitempty" db:"delivery_comment"`
	// @gotags: db:"delivery_created_at"
	CreatedAt string `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"delivery_created_at"`
	// @gotags: db:"delivery_created_by"
	CreatedBy uint64 `protobuf:"fixed64,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"delivery_created_by"`
	// @gotags: db:"delivery_created_by_name"
	CreatedByName string `protobuf:"bytes,6,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"delivery_created_by_name"`
	// @gotags: db:"delivery_updated_at"
	UpdatedAt string `protobuf:"bytes,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" db:"delivery_updated_at"`
	// @gotags: db:"delivery_updated_by"
	UpdatedBy uint64 `protobuf:"fixed64,8,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty" db:"delivery_updated_by"`
	// @gotags: db:"delivery_updated_by_name"
	UpdatedByName string `protobuf:"bytes,9,opt,name=UpdatedByName,proto3" json:"UpdatedByName,omitempty" db:"delivery_updated_by_name"`
	// @gotags: db:"delivery_isdeleted"
	IsDeleted bool `protobuf:"varint,10,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"delivery_isdeleted"`
}

func (x *Delivery) Reset() {
	*x = Delivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delivery) ProtoMessage() {}

func (x *Delivery) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delivery.ProtoReflect.Descriptor instead.
func (*Delivery) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{15}
}

func (x *Delivery) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Delivery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Delivery) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Delivery) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Delivery) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Delivery) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Delivery) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Delivery) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Delivery) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Delivery) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type ResponseDeliveries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deliveries []*Delivery       `protobuf:"bytes,1,rep,name=Deliveries,proto3" json:"Deliveries,omitempty"`
	Status     *ClientsMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseDeliveries) Reset() {
	*x = ResponseDeliveries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDeliveries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDeliveries) ProtoMessage() {}

func (x *ResponseDeliveries) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDeliveries.ProtoReflect.Descriptor instead.
func (*ResponseDeliveries) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseDeliveries) GetDeliveries() []*Delivery {
	if x != nil {
		return x.Deliveries
	}
	return nil
}

func (x *ResponseDeliveries) GetStatus() *ClientsMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =============== //
//
//	Notes         //
//
// =============== //
type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"note_id"
	Id uint64 `protobuf:"fixed64,1,opt,name=Id,proto3" json:"Id,omitempty" db:"note_id"`
	// @gotags: db:"note_client_id"
	ClientId uint64 `protobuf:"fixed64,2,opt,name=ClientId,proto3" json:"ClientId,omitempty" db:"note_client_id"`
	// @gotags: db:"note_text"
	NoteText string `protobuf:"bytes,3,opt,name=NoteText,proto3" json:"NoteText,omitempty" db:"note_text"`
	// @gotags: db:"note_created_at"
	CreatedAt string `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"note_created_at"`
	// @gotags: db:"note_created_by"
	CreatedBy uint64 `protobuf:"fixed64,5,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"note_created_by"`
	// @gotags: db:"note_created_by_name"
	CreatedByName string `protobuf:"bytes,6,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"note_created_by_name"`
	// @gotags: db:"note_updated_at"
	UpdatedAt string `protobuf:"bytes,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" db:"note_updated_at"`
	// @gotags: db:"note_updated_by"
	UpdatedBy uint64 `protobuf:"fixed64,8,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty" db:"note_updated_by"`
	// @gotags: db:"note_updated_by_name"
	UpdatedByName string `protobuf:"bytes,9,opt,name=UpdatedByName,proto3" json:"UpdatedByName,omitempty" db:"note_updated_by_name"`
	// @gotags: db:"note_isdeleted"
	IsDeleted bool `protobuf:"varint,10,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"note_isdeleted"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{17}
}

func (x *Note) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Note) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *Note) GetNoteText() string {
	if x != nil {
		return x.NoteText
	}
	return ""
}

func (x *Note) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Note) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Note) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Note) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Note) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Note) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Note) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type ResponseNotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notes  []*Note           `protobuf:"bytes,1,rep,name=Notes,proto3" json:"Notes,omitempty"`
	Status *ClientsMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseNotes) Reset() {
	*x = ResponseNotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNotes) ProtoMessage() {}

func (x *ResponseNotes) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNotes.ProtoReflect.Descriptor instead.
func (*ResponseNotes) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseNotes) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *ResponseNotes) GetStatus() *ClientsMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =============== //
//
//	Addresses     //
//
// =============== //
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"address_id"
	Id uint64 `protobuf:"fixed64,1,opt,name=Id,proto3" json:"Id,omitempty" db:"address_id"`
	// @gotags: db:"address_client_id"
	ClientId uint64 `protobuf:"fixed64,2,opt,name=ClientId,proto3" json:"ClientId,omitempty" db:"address_client_id"`
	// @gotags: db:"address_delivery_id"
	DeliveryId uint64 `protobuf:"fixed64,3,opt,name=DeliveryId,proto3" json:"DeliveryId,omitempty" db:"address_delivery_id"`
	// @gotags: db:"address_delivery_name"
	DeliveryName string `protobuf:"bytes,4,opt,name=DeliveryName,proto3" json:"DeliveryName,omitempty" db:"address_delivery_name"`
	// @gotags: db:"address_address"
	Address string `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty" db:"address_address"`
	// @gotags: db:"address_address_type_id"
	AddressTypeId uint64 `protobuf:"fixed64,6,opt,name=AddressTypeId,proto3" json:"AddressTypeId,omitempty" db:"address_address_type_id"`
	// @gotags: db:"address_address_type_name"
	AddressTypeName string `protobuf:"bytes,7,opt,name=AddressTypeName,proto3" json:"AddressTypeName,omitempty" db:"address_address_type_name"`
	// @gotags: db:"address_postal_code"
	PostalCode string `protobuf:"bytes,8,opt,name=PostalCode,proto3" json:"PostalCode,omitempty" db:"address_postal_code"`
	// @gotags: db:"address_timezone"
	Timezone string `protobuf:"bytes,9,opt,name=Timezone,proto3" json:"Timezone,omitempty" db:"address_timezone"`
	// @gotags: db:"address_country_id"
	CountryId uint64 `protobuf:"fixed64,10,opt,name=CountryId,proto3" json:"CountryId,omitempty" db:"address_country_id"`
	// @gotags: db:"address_country_name"
	CountryName string `protobuf:"bytes,11,opt,name=CountryName,proto3" json:"CountryName,omitempty" db:"address_country_name"`
	// @gotags: db:"address_isquality_by_dadata"
	IsQualityByDadata bool `protobuf:"varint,12,opt,name=IsQualityByDadata,proto3" json:"IsQualityByDadata,omitempty" db:"address_isquality_by_dadata"`
	// @gotags: db:"address_isvalid_by_post"
	IsValidByPost bool `protobuf:"varint,13,opt,name=IsValidByPost,proto3" json:"IsValidByPost,omitempty" db:"address_isvalid_by_post"`
	// @gotags: db:"address_islast"
	IsLast bool `protobuf:"varint,14,opt,name=IsLast,proto3" json:"IsLast,omitempty" db:"address_islast"`
	// @gotags: db:"address_isdeleted"
	IsDeleted bool `protobuf:"varint,15,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"address_isdeleted"`
	// @gotags: db:"address_created_at"
	CreatedAt string `protobuf:"bytes,16,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"address_created_at"`
	// @gotags: db:"address_created_by"
	CreatedBy uint64 `protobuf:"fixed64,17,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"address_created_by"`
	// @gotags: db:"address_created_by_name"
	CreatedByName string `protobuf:"bytes,18,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"address_created_by_name"`
	// @gotags: db:"address_updated_at"
	UpdatedAt string `protobuf:"bytes,19,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" db:"address_updated_at"`
	// @gotags: db:"address_updated_by"
	UpdatedBy uint64 `protobuf:"fixed64,20,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty" db:"address_updated_by"`
	// @gotags: db:"address_updated_by_name"
	UpdatedByName string `protobuf:"bytes,21,opt,name=UpdatedByName,proto3" json:"UpdatedByName,omitempty" db:"address_updated_by_name"`
	// @gotags: db:"address_address_json"
	AddressJson string `protobuf:"bytes,22,opt,name=AddressJson,proto3" json:"AddressJson,omitempty" db:"address_address_json"`
	// @gotags: db:"address_comment"
	Comment string `protobuf:"bytes,23,opt,name=Comment,proto3" json:"Comment,omitempty" db:"address_comment"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{19}
}

func (x *Address) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Address) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *Address) GetDeliveryId() uint64 {
	if x != nil {
		return x.DeliveryId
	}
	return 0
}

func (x *Address) GetDeliveryName() string {
	if x != nil {
		return x.DeliveryName
	}
	return ""
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Address) GetAddressTypeId() uint64 {
	if x != nil {
		return x.AddressTypeId
	}
	return 0
}

func (x *Address) GetAddressTypeName() string {
	if x != nil {
		return x.AddressTypeName
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Address) GetCountryId() uint64 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *Address) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *Address) GetIsQualityByDadata() bool {
	if x != nil {
		return x.IsQualityByDadata
	}
	return false
}

func (x *Address) GetIsValidByPost() bool {
	if x != nil {
		return x.IsValidByPost
	}
	return false
}

func (x *Address) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

func (x *Address) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Address) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Address) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Address) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Address) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Address) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Address) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Address) GetAddressJson() string {
	if x != nil {
		return x.AddressJson
	}
	return ""
}

func (x *Address) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ResponseAddresses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*Address        `protobuf:"bytes,1,rep,name=Addresses,proto3" json:"Addresses,omitempty"`
	Status    *ClientsMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseAddresses) Reset() {
	*x = ResponseAddresses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAddresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAddresses) ProtoMessage() {}

func (x *ResponseAddresses) ProtoReflect() protoreflect.Message {
	mi := &file_clients_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAddresses.ProtoReflect.Descriptor instead.
func (*ResponseAddresses) Descriptor() ([]byte, []int) {
	return file_clients_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseAddresses) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *ResponseAddresses) GetStatus() *ClientsMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_clients_proto protoreflect.FileDescriptor

var file_clients_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42,
	0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x35,
	0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d,
	0x53, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xa2, 0x01,
	0x0a, 0x1d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53,
	0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x06, 0x52, 0x03, 0x49,
	0x64, 0x73, 0x22, 0xd3, 0x03, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x4e, 0x65, 0x65,
	0x64, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0d, 0x4e, 0x65, 0x65, 0x64, 0x73,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x10, 0x4e, 0x65, 0x65, 0x64,
	0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x10, 0x4e, 0x65, 0x65,
	0x64, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a,
	0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53,
	0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x06, 0x52, 0x03, 0x49,
	0x64, 0x73, 0x22, 0xb6, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x1e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f,
	0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x06, 0x52, 0x03, 0x49, 0x64,
	0x73, 0x22, 0xb7, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x74, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x19,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x06, 0x52, 0x03, 0x49, 0x64, 0x73, 0x22, 0xcb, 0x05, 0x0a,
	0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x49, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x44, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x11, 0x49, 0x73, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x44, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0d,
	0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0d, 0x49, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x49,
	0x73, 0x4c, 0x61, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f,
	0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x49, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09,
	0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x1d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x06, 0x52, 0x03, 0x49, 0x64, 0x73, 0x22,
	0x48, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa9, 0x02, 0x0a, 0x07, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x76, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x03,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x4e, 0x65, 0x65, 0x64, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x4e, 0x65, 0x65, 0x64, 0x73,
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x4e,
	0x65, 0x65, 0x64, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x4e, 0x65, 0x65, 0x64, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x3c,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xaa, 0x02, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x7a, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x67, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x05,
	0x4e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xe9, 0x05, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0a, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f,
	0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x44, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x49, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x44, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x42,
	0x79, 0x50, 0x6f, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73,
	0x4c, 0x61, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4c, 0x61,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4a,
	0x73, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x76, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x37, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x53,
	0x5f, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x53, 0x5f, 0x46, 0x41, 0x4c,
	0x53, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x53, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10,
	0x02, 0x2a, 0x28, 0x0a, 0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x2a, 0x76, 0x0a, 0x16, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x59, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x42, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x5f, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41,
	0x54, 0x10, 0x03, 0x2a, 0xa9, 0x01, 0x0a, 0x1b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d,
	0x53, 0x5f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x42,
	0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52,
	0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x04, 0x2a,
	0x7d, 0x0a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x42, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x59, 0x5f, 0x44, 0x45, 0x4c,
	0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52,
	0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x2a, 0x56,
	0x0a, 0x14, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x53, 0x5f, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x59, 0x5f, 0x4e, 0x4f, 0x54,
	0x45, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x5f, 0x4e, 0x4f, 0x54,
	0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x42, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x44, 0x5f, 0x41, 0x54, 0x10, 0x02, 0x2a, 0x7b, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53,
	0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52,
	0x45, 0x53, 0x53, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x42, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x5f, 0x41,
	0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41,
	0x54, 0x10, 0x03, 0x32, 0xd7, 0x0c, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x26,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1f, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x1b, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a,
	0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65,
	0x1a, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x1a, 0x16,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x73, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a,
	0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0e, 0x5a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clients_proto_rawDescOnce sync.Once
	file_clients_proto_rawDescData = file_clients_proto_rawDesc
)

func file_clients_proto_rawDescGZIP() []byte {
	file_clients_proto_rawDescOnce.Do(func() {
		file_clients_proto_rawDescData = protoimpl.X.CompressGZIP(file_clients_proto_rawDescData)
	})
	return file_clients_proto_rawDescData
}

var file_clients_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_clients_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_clients_proto_goTypes = []interface{}{
	(ClientsMS_Bool)(0),                        // 0: clients.ClientsMS_Bool
	(ClientsMS_OrderType)(0),                   // 1: clients.ClientsMS_OrderType
	(ClientsMS_CountryOrder)(0),                // 2: clients.ClientsMS_CountryOrder
	(ClientsMS_AddressTypesOrder)(0),           // 3: clients.ClientsMS_AddressTypesOrder
	(ClientsMS_DeliveriesOrder)(0),             // 4: clients.ClientsMS_DeliveriesOrder
	(ClientsMS_NotesOrder)(0),                  // 5: clients.ClientsMS_NotesOrder
	(ClientsMS_AddressesOrder)(0),              // 6: clients.ClientsMS_AddressesOrder
	(*RequestCountry)(nil),                     // 7: clients.RequestCountry
	(*RequestCountriesDeletionFlags)(nil),      // 8: clients.RequestCountriesDeletionFlags
	(*RequestAddressType)(nil),                 // 9: clients.RequestAddressType
	(*RequestAddressesTypesDeletionFlags)(nil), // 10: clients.RequestAddressesTypesDeletionFlags
	(*RequestDelivery)(nil),                    // 11: clients.RequestDelivery
	(*RequestDeliveriesDeletionFlags)(nil),     // 12: clients.RequestDeliveriesDeletionFlags
	(*RequestNote)(nil),                        // 13: clients.RequestNote
	(*RequestNotesDeletionFlags)(nil),          // 14: clients.RequestNotesDeletionFlags
	(*RequestAddress)(nil),                     // 15: clients.RequestAddress
	(*RequestAddressesDeletionFlags)(nil),      // 16: clients.RequestAddressesDeletionFlags
	(*ClientsMS_Status)(nil),                   // 17: clients.ClientsMS_Status
	(*Country)(nil),                            // 18: clients.Country
	(*ResponseCountries)(nil),                  // 19: clients.ResponseCountries
	(*AddressType)(nil),                        // 20: clients.AddressType
	(*ResponseAddressesTypes)(nil),             // 21: clients.ResponseAddressesTypes
	(*Delivery)(nil),                           // 22: clients.Delivery
	(*ResponseDeliveries)(nil),                 // 23: clients.ResponseDeliveries
	(*Note)(nil),                               // 24: clients.Note
	(*ResponseNotes)(nil),                      // 25: clients.ResponseNotes
	(*Address)(nil),                            // 26: clients.Address
	(*ResponseAddresses)(nil),                  // 27: clients.ResponseAddresses
}
var file_clients_proto_depIdxs = []int32{
	0,  // 0: clients.RequestCountry.IsDeleted:type_name -> clients.ClientsMS_Bool
	2,  // 1: clients.RequestCountry.Order:type_name -> clients.ClientsMS_CountryOrder
	1,  // 2: clients.RequestCountry.OrderType:type_name -> clients.ClientsMS_OrderType
	0,  // 3: clients.RequestCountriesDeletionFlags.IsDeleted:type_name -> clients.ClientsMS_Bool
	0,  // 4: clients.RequestAddressType.NeedsCleaning:type_name -> clients.ClientsMS_Bool
	0,  // 5: clients.RequestAddressType.NeedsNormalizing:type_name -> clients.ClientsMS_Bool
	0,  // 6: clients.RequestAddressType.IsDeleted:type_name -> clients.ClientsMS_Bool
	3,  // 7: clients.RequestAddressType.Order:type_name -> clients.ClientsMS_AddressTypesOrder
	1,  // 8: clients.RequestAddressType.OrderType:type_name -> clients.ClientsMS_OrderType
	0,  // 9: clients.RequestAddressesTypesDeletionFlags.IsDeleted:type_name -> clients.ClientsMS_Bool
	0,  // 10: clients.RequestDelivery.IsDeleted:type_name -> clients.ClientsMS_Bool
	4,  // 11: clients.RequestDelivery.Order:type_name -> clients.ClientsMS_DeliveriesOrder
	1,  // 12: clients.RequestDelivery.OrderType:type_name -> clients.ClientsMS_OrderType
	0,  // 13: clients.RequestDeliveriesDeletionFlags.IsDeleted:type_name -> clients.ClientsMS_Bool
	0,  // 14: clients.RequestNote.IsDeleted:type_name -> clients.ClientsMS_Bool
	5,  // 15: clients.RequestNote.Order:type_name -> clients.ClientsMS_NotesOrder
	1,  // 16: clients.RequestNote.OrderType:type_name -> clients.ClientsMS_OrderType
	0,  // 17: clients.RequestNotesDeletionFlags.IsDeleted:type_name -> clients.ClientsMS_Bool
	0,  // 18: clients.RequestAddress.IsQualityByDadata:type_name -> clients.ClientsMS_Bool
	0,  // 19: clients.RequestAddress.IsValidByPost:type_name -> clients.ClientsMS_Bool
	0,  // 20: clients.RequestAddress.IsLast:type_name -> clients.ClientsMS_Bool
	0,  // 21: clients.RequestAddress.IsDeleted:type_name -> clients.ClientsMS_Bool
	6,  // 22: clients.RequestAddress.Order:type_name -> clients.ClientsMS_AddressesOrder
	1,  // 23: clients.RequestAddress.OrderType:type_name -> clients.ClientsMS_OrderType
	0,  // 24: clients.RequestAddressesDeletionFlags.IsDeleted:type_name -> clients.ClientsMS_Bool
	18, // 25: clients.ResponseCountries.Countries:type_name -> clients.Country
	17, // 26: clients.ResponseCountries.Status:type_name -> clients.ClientsMS_Status
	20, // 27: clients.ResponseAddressesTypes.AddressesTypes:type_name -> clients.AddressType
	17, // 28: clients.ResponseAddressesTypes.Status:type_name -> clients.ClientsMS_Status
	22, // 29: clients.ResponseDeliveries.Deliveries:type_name -> clients.Delivery
	17, // 30: clients.ResponseDeliveries.Status:type_name -> clients.ClientsMS_Status
	24, // 31: clients.ResponseNotes.Notes:type_name -> clients.Note
	17, // 32: clients.ResponseNotes.Status:type_name -> clients.ClientsMS_Status
	26, // 33: clients.ResponseAddresses.Addresses:type_name -> clients.Address
	17, // 34: clients.ResponseAddresses.Status:type_name -> clients.ClientsMS_Status
	7,  // 35: clients.ClientsServices.GetCountries:input_type -> clients.RequestCountry
	7,  // 36: clients.ClientsServices.CreateCountry:input_type -> clients.RequestCountry
	7,  // 37: clients.ClientsServices.UpdateCountry:input_type -> clients.RequestCountry
	8,  // 38: clients.ClientsServices.UpdateCountriesDeletionFlags:input_type -> clients.RequestCountriesDeletionFlags
	9,  // 39: clients.ClientsServices.GetAddressesTypes:input_type -> clients.RequestAddressType
	9,  // 40: clients.ClientsServices.CreateAddressType:input_type -> clients.RequestAddressType
	9,  // 41: clients.ClientsServices.UpdateAddressType:input_type -> clients.RequestAddressType
	10, // 42: clients.ClientsServices.UpdateAddressTypeDeletionFlags:input_type -> clients.RequestAddressesTypesDeletionFlags
	11, // 43: clients.ClientsServices.GetDeliveries:input_type -> clients.RequestDelivery
	11, // 44: clients.ClientsServices.CreateDelivery:input_type -> clients.RequestDelivery
	11, // 45: clients.ClientsServices.UpdateDelivery:input_type -> clients.RequestDelivery
	12, // 46: clients.ClientsServices.UpdateDeliveriesDeletionFlags:input_type -> clients.RequestDeliveriesDeletionFlags
	13, // 47: clients.ClientsServices.GetNotes:input_type -> clients.RequestNote
	13, // 48: clients.ClientsServices.CreateNote:input_type -> clients.RequestNote
	13, // 49: clients.ClientsServices.UpdateNote:input_type -> clients.RequestNote
	14, // 50: clients.ClientsServices.UpdateNotesDeletionFlags:input_type -> clients.RequestNotesDeletionFlags
	15, // 51: clients.ClientsServices.GetAddresses:input_type -> clients.RequestAddress
	15, // 52: clients.ClientsServices.CreateAddress:input_type -> clients.RequestAddress
	15, // 53: clients.ClientsServices.UpdateAddress:input_type -> clients.RequestAddress
	16, // 54: clients.ClientsServices.UpdateAddressesDeletionFlags:input_type -> clients.RequestAddressesDeletionFlags
	19, // 55: clients.ClientsServices.GetCountries:output_type -> clients.ResponseCountries
	19, // 56: clients.ClientsServices.CreateCountry:output_type -> clients.ResponseCountries
	19, // 57: clients.ClientsServices.UpdateCountry:output_type -> clients.ResponseCountries
	19, // 58: clients.ClientsServices.UpdateCountriesDeletionFlags:output_type -> clients.ResponseCountries
	21, // 59: clients.ClientsServices.GetAddressesTypes:output_type -> clients.ResponseAddressesTypes
	21, // 60: clients.ClientsServices.CreateAddressType:output_type -> clients.ResponseAddressesTypes
	21, // 61: clients.ClientsServices.UpdateAddressType:output_type -> clients.ResponseAddressesTypes
	21, // 62: clients.ClientsServices.UpdateAddressTypeDeletionFlags:output_type -> clients.ResponseAddressesTypes
	23, // 63: clients.ClientsServices.GetDeliveries:output_type -> clients.ResponseDeliveries
	23, // 64: clients.ClientsServices.CreateDelivery:output_type -> clients.ResponseDeliveries
	23, // 65: clients.ClientsServices.UpdateDelivery:output_type -> clients.ResponseDeliveries
	23, // 66: clients.ClientsServices.UpdateDeliveriesDeletionFlags:output_type -> clients.ResponseDeliveries
	25, // 67: clients.ClientsServices.GetNotes:output_type -> clients.ResponseNotes
	25, // 68: clients.ClientsServices.CreateNote:output_type -> clients.ResponseNotes
	25, // 69: clients.ClientsServices.UpdateNote:output_type -> clients.ResponseNotes
	25, // 70: clients.ClientsServices.UpdateNotesDeletionFlags:output_type -> clients.ResponseNotes
	27, // 71: clients.ClientsServices.GetAddresses:output_type -> clients.ResponseAddresses
	27, // 72: clients.ClientsServices.CreateAddress:output_type -> clients.ResponseAddresses
	27, // 73: clients.ClientsServices.UpdateAddress:output_type -> clients.ResponseAddresses
	27, // 74: clients.ClientsServices.UpdateAddressesDeletionFlags:output_type -> clients.ResponseAddresses
	55, // [55:75] is the sub-list for method output_type
	35, // [35:55] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_clients_proto_init() }
func file_clients_proto_init() {
	if File_clients_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clients_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCountry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestCountriesDeletionFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAddressesTypesDeletionFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDelivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDeliveriesDeletionFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestNotesDeletionFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAddressesDeletionFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientsMS_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCountries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAddressesTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDeliveries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAddresses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clients_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clients_proto_goTypes,
		DependencyIndexes: file_clients_proto_depIdxs,
		EnumInfos:         file_clients_proto_enumTypes,
		MessageInfos:      file_clients_proto_msgTypes,
	}.Build()
	File_clients_proto = out.File
	file_clients_proto_rawDesc = nil
	file_clients_proto_goTypes = nil
	file_clients_proto_depIdxs = nil
}
