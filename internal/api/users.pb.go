// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: users.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsersMS_Bool int32

const (
	UsersMS_Bool_IS_ANY   UsersMS_Bool = 0
	UsersMS_Bool_IS_FALSE UsersMS_Bool = 1
	UsersMS_Bool_IS_TRUE  UsersMS_Bool = 2
)

// Enum value maps for UsersMS_Bool.
var (
	UsersMS_Bool_name = map[int32]string{
		0: "IS_ANY",
		1: "IS_FALSE",
		2: "IS_TRUE",
	}
	UsersMS_Bool_value = map[string]int32{
		"IS_ANY":   0,
		"IS_FALSE": 1,
		"IS_TRUE":  2,
	}
)

func (x UsersMS_Bool) Enum() *UsersMS_Bool {
	p := new(UsersMS_Bool)
	*p = x
	return p
}

func (x UsersMS_Bool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersMS_Bool) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[0].Descriptor()
}

func (UsersMS_Bool) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[0]
}

func (x UsersMS_Bool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersMS_Bool.Descriptor instead.
func (UsersMS_Bool) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{0}
}

// Users
type UsersMS_UsersOrder int32

const (
	UsersMS_UsersOrder_BY_USER_ID            UsersMS_UsersOrder = 0
	UsersMS_UsersOrder_BY_USER_NAME          UsersMS_UsersOrder = 1
	UsersMS_UsersOrder_BY_USER_LOGIN         UsersMS_UsersOrder = 2
	UsersMS_UsersOrder_BY_USER_DATE_CREATION UsersMS_UsersOrder = 3
)

// Enum value maps for UsersMS_UsersOrder.
var (
	UsersMS_UsersOrder_name = map[int32]string{
		0: "BY_USER_ID",
		1: "BY_USER_NAME",
		2: "BY_USER_LOGIN",
		3: "BY_USER_DATE_CREATION",
	}
	UsersMS_UsersOrder_value = map[string]int32{
		"BY_USER_ID":            0,
		"BY_USER_NAME":          1,
		"BY_USER_LOGIN":         2,
		"BY_USER_DATE_CREATION": 3,
	}
)

func (x UsersMS_UsersOrder) Enum() *UsersMS_UsersOrder {
	p := new(UsersMS_UsersOrder)
	*p = x
	return p
}

func (x UsersMS_UsersOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersMS_UsersOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[1].Descriptor()
}

func (UsersMS_UsersOrder) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[1]
}

func (x UsersMS_UsersOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersMS_UsersOrder.Descriptor instead.
func (UsersMS_UsersOrder) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{1}
}

// Users history
type UsersMS_UsersHistoryOrder int32

const (
	UsersMS_UsersHistoryOrder_BY_USERS_HISTORY_ID         UsersMS_UsersHistoryOrder = 0
	UsersMS_UsersHistoryOrder_BY_USERS_HISTORY_USER_ID    UsersMS_UsersHistoryOrder = 1
	UsersMS_UsersHistoryOrder_BY_USERS_HISTORY_CREATED_AT UsersMS_UsersHistoryOrder = 2
)

// Enum value maps for UsersMS_UsersHistoryOrder.
var (
	UsersMS_UsersHistoryOrder_name = map[int32]string{
		0: "BY_USERS_HISTORY_ID",
		1: "BY_USERS_HISTORY_USER_ID",
		2: "BY_USERS_HISTORY_CREATED_AT",
	}
	UsersMS_UsersHistoryOrder_value = map[string]int32{
		"BY_USERS_HISTORY_ID":         0,
		"BY_USERS_HISTORY_USER_ID":    1,
		"BY_USERS_HISTORY_CREATED_AT": 2,
	}
)

func (x UsersMS_UsersHistoryOrder) Enum() *UsersMS_UsersHistoryOrder {
	p := new(UsersMS_UsersHistoryOrder)
	*p = x
	return p
}

func (x UsersMS_UsersHistoryOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersMS_UsersHistoryOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[2].Descriptor()
}

func (UsersMS_UsersHistoryOrder) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[2]
}

func (x UsersMS_UsersHistoryOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersMS_UsersHistoryOrder.Descriptor instead.
func (UsersMS_UsersHistoryOrder) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{2}
}

// Users roles
type UsersMS_UsersRolesOrder int32

const (
	UsersMS_UsersRolesOrder_BY_USER_ROLE_ID   UsersMS_UsersRolesOrder = 0
	UsersMS_UsersRolesOrder_BY_USER_ROLE_NAME UsersMS_UsersRolesOrder = 1
)

// Enum value maps for UsersMS_UsersRolesOrder.
var (
	UsersMS_UsersRolesOrder_name = map[int32]string{
		0: "BY_USER_ROLE_ID",
		1: "BY_USER_ROLE_NAME",
	}
	UsersMS_UsersRolesOrder_value = map[string]int32{
		"BY_USER_ROLE_ID":   0,
		"BY_USER_ROLE_NAME": 1,
	}
)

func (x UsersMS_UsersRolesOrder) Enum() *UsersMS_UsersRolesOrder {
	p := new(UsersMS_UsersRolesOrder)
	*p = x
	return p
}

func (x UsersMS_UsersRolesOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersMS_UsersRolesOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[3].Descriptor()
}

func (UsersMS_UsersRolesOrder) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[3]
}

func (x UsersMS_UsersRolesOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersMS_UsersRolesOrder.Descriptor instead.
func (UsersMS_UsersRolesOrder) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{3}
}

// Users access rights
type UsersMS_UsersAccessRightsOrder int32

const (
	UsersMS_UsersAccessRightsOrder_BY_USERS_ACCESS_RIGHTS_ID         UsersMS_UsersAccessRightsOrder = 0
	UsersMS_UsersAccessRightsOrder_BY_USERS_ACCESS_RIGHTS_ROLE_ID    UsersMS_UsersAccessRightsOrder = 1
	UsersMS_UsersAccessRightsOrder_BY_USERS_ACCESS_RIGHTS_TABLE_NAME UsersMS_UsersAccessRightsOrder = 2
	UsersMS_UsersAccessRightsOrder_BY_USERS_ACCESS_RIGHTS_CREATED_AT UsersMS_UsersAccessRightsOrder = 3
	UsersMS_UsersAccessRightsOrder_BY_USERS_ACCESS_RIGHTS_UPDATED_AT UsersMS_UsersAccessRightsOrder = 4
)

// Enum value maps for UsersMS_UsersAccessRightsOrder.
var (
	UsersMS_UsersAccessRightsOrder_name = map[int32]string{
		0: "BY_USERS_ACCESS_RIGHTS_ID",
		1: "BY_USERS_ACCESS_RIGHTS_ROLE_ID",
		2: "BY_USERS_ACCESS_RIGHTS_TABLE_NAME",
		3: "BY_USERS_ACCESS_RIGHTS_CREATED_AT",
		4: "BY_USERS_ACCESS_RIGHTS_UPDATED_AT",
	}
	UsersMS_UsersAccessRightsOrder_value = map[string]int32{
		"BY_USERS_ACCESS_RIGHTS_ID":         0,
		"BY_USERS_ACCESS_RIGHTS_ROLE_ID":    1,
		"BY_USERS_ACCESS_RIGHTS_TABLE_NAME": 2,
		"BY_USERS_ACCESS_RIGHTS_CREATED_AT": 3,
		"BY_USERS_ACCESS_RIGHTS_UPDATED_AT": 4,
	}
)

func (x UsersMS_UsersAccessRightsOrder) Enum() *UsersMS_UsersAccessRightsOrder {
	p := new(UsersMS_UsersAccessRightsOrder)
	*p = x
	return p
}

func (x UsersMS_UsersAccessRightsOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersMS_UsersAccessRightsOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[4].Descriptor()
}

func (UsersMS_UsersAccessRightsOrder) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[4]
}

func (x UsersMS_UsersAccessRightsOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersMS_UsersAccessRightsOrder.Descriptor instead.
func (UsersMS_UsersAccessRightsOrder) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{4}
}

// Order type for all entities
type UsersMS_OrderType int32

const (
	UsersMS_OrderType_ASC  UsersMS_OrderType = 0
	UsersMS_OrderType_DESC UsersMS_OrderType = 1
)

// Enum value maps for UsersMS_OrderType.
var (
	UsersMS_OrderType_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	UsersMS_OrderType_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x UsersMS_OrderType) Enum() *UsersMS_OrderType {
	p := new(UsersMS_OrderType)
	*p = x
	return p
}

func (x UsersMS_OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersMS_OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[5].Descriptor()
}

func (UsersMS_OrderType) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[5]
}

func (x UsersMS_OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersMS_OrderType.Descriptor instead.
func (UsersMS_OrderType) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{5}
}

// =============== //
//
//	Tables     //
//
// =============== //
type RelKind int32

const (
	RelKind_ONLY_TABLES      RelKind = 0
	RelKind_ONLY_VIEWS       RelKind = 1
	RelKind_TABLES_AND_VIEWS RelKind = 2
)

// Enum value maps for RelKind.
var (
	RelKind_name = map[int32]string{
		0: "ONLY_TABLES",
		1: "ONLY_VIEWS",
		2: "TABLES_AND_VIEWS",
	}
	RelKind_value = map[string]int32{
		"ONLY_TABLES":      0,
		"ONLY_VIEWS":       1,
		"TABLES_AND_VIEWS": 2,
	}
)

func (x RelKind) Enum() *RelKind {
	p := new(RelKind)
	*p = x
	return p
}

func (x RelKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelKind) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[6].Descriptor()
}

func (RelKind) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[6]
}

func (x RelKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelKind.Descriptor instead.
func (RelKind) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{6}
}

// =============================== //
//
//	Users access rights for Tables //
//
// =============================== //
type UsersAccessRights_Actions int32

const (
	UsersAccessRights_Actions_CAN_SELECT UsersAccessRights_Actions = 0
	UsersAccessRights_Actions_CAN_INSERT UsersAccessRights_Actions = 1
	UsersAccessRights_Actions_CAN_UPDATE UsersAccessRights_Actions = 2
	UsersAccessRights_Actions_CAN_DELETE UsersAccessRights_Actions = 3
	UsersAccessRights_Actions_CAN_AUTH   UsersAccessRights_Actions = 4
)

// Enum value maps for UsersAccessRights_Actions.
var (
	UsersAccessRights_Actions_name = map[int32]string{
		0: "CAN_SELECT",
		1: "CAN_INSERT",
		2: "CAN_UPDATE",
		3: "CAN_DELETE",
		4: "CAN_AUTH",
	}
	UsersAccessRights_Actions_value = map[string]int32{
		"CAN_SELECT": 0,
		"CAN_INSERT": 1,
		"CAN_UPDATE": 2,
		"CAN_DELETE": 3,
		"CAN_AUTH":   4,
	}
)

func (x UsersAccessRights_Actions) Enum() *UsersAccessRights_Actions {
	p := new(UsersAccessRights_Actions)
	*p = x
	return p
}

func (x UsersAccessRights_Actions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsersAccessRights_Actions) Descriptor() protoreflect.EnumDescriptor {
	return file_users_proto_enumTypes[7].Descriptor()
}

func (UsersAccessRights_Actions) Type() protoreflect.EnumType {
	return &file_users_proto_enumTypes[7]
}

func (x UsersAccessRights_Actions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsersAccessRights_Actions.Descriptor instead.
func (UsersAccessRights_Actions) EnumDescriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{7}
}

// =============== //
// DeletionFlags   //
// =============== //
type RequestDeletionFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string       `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId  uint64       `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsDeleted UsersMS_Bool `protobuf:"varint,3,opt,name=IsDeleted,proto3,enum=usr.UsersMS_Bool" json:"IsDeleted,omitempty"`
	Ids       []uint64     `protobuf:"fixed64,4,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *RequestDeletionFlags) Reset() {
	*x = RequestDeletionFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDeletionFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDeletionFlags) ProtoMessage() {}

func (x *RequestDeletionFlags) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDeletionFlags.ProtoReflect.Descriptor instead.
func (*RequestDeletionFlags) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{0}
}

func (x *RequestDeletionFlags) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestDeletionFlags) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestDeletionFlags) GetIsDeleted() UsersMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return UsersMS_Bool_IS_ANY
}

func (x *RequestDeletionFlags) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// =============== //
//
//	Users         //
//
// =============== //
type RequestUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken      string             `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId       uint64             `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Id             uint64             `protobuf:"fixed64,3,opt,name=Id,proto3" json:"Id,omitempty"`
	FirstName      string             `protobuf:"bytes,4,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	MiddleName     string             `protobuf:"bytes,5,opt,name=MiddleName,proto3" json:"MiddleName,omitempty"`
	LastName       string             `protobuf:"bytes,6,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Login          string             `protobuf:"bytes,7,opt,name=Login,proto3" json:"Login,omitempty"`
	Password       string             `protobuf:"bytes,8,opt,name=Password,proto3" json:"Password,omitempty"`
	Phone          string             `protobuf:"bytes,9,opt,name=Phone,proto3" json:"Phone,omitempty"`
	PhoneInternal  string             `protobuf:"bytes,10,opt,name=PhoneInternal,proto3" json:"PhoneInternal,omitempty"`
	Comment        string             `protobuf:"bytes,11,opt,name=Comment,proto3" json:"Comment,omitempty"`
	RoleId         uint64             `protobuf:"fixed64,12,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
	FullName       string             `protobuf:"bytes,13,opt,name=FullName,proto3" json:"FullName,omitempty"`
	IsDeleted      UsersMS_Bool       `protobuf:"varint,14,opt,name=IsDeleted,proto3,enum=usr.UsersMS_Bool" json:"IsDeleted,omitempty"`
	UsersOrder     UsersMS_UsersOrder `protobuf:"varint,15,opt,name=UsersOrder,proto3,enum=usr.UsersMS_UsersOrder" json:"UsersOrder,omitempty"`
	UsersOrderType UsersMS_OrderType  `protobuf:"varint,16,opt,name=UsersOrderType,proto3,enum=usr.UsersMS_OrderType" json:"UsersOrderType,omitempty"`
}

func (x *RequestUser) Reset() {
	*x = RequestUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUser) ProtoMessage() {}

func (x *RequestUser) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUser.ProtoReflect.Descriptor instead.
func (*RequestUser) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{1}
}

func (x *RequestUser) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestUser) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestUser) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUser) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *RequestUser) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *RequestUser) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *RequestUser) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *RequestUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RequestUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *RequestUser) GetPhoneInternal() string {
	if x != nil {
		return x.PhoneInternal
	}
	return ""
}

func (x *RequestUser) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RequestUser) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RequestUser) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *RequestUser) GetIsDeleted() UsersMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return UsersMS_Bool_IS_ANY
}

func (x *RequestUser) GetUsersOrder() UsersMS_UsersOrder {
	if x != nil {
		return x.UsersOrder
	}
	return UsersMS_UsersOrder_BY_USER_ID
}

func (x *RequestUser) GetUsersOrderType() UsersMS_OrderType {
	if x != nil {
		return x.UsersOrderType
	}
	return UsersMS_OrderType_ASC
}

// =============== //
//
//	Users history //
//
// =============== //
type RequestUsersHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string                    `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	Id        uint64                    `protobuf:"fixed64,2,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId    uint64                    `protobuf:"fixed64,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	AuthorId  uint64                    `protobuf:"fixed64,4,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Order     UsersMS_UsersHistoryOrder `protobuf:"varint,5,opt,name=Order,proto3,enum=usr.UsersMS_UsersHistoryOrder" json:"Order,omitempty"`
	OrderType UsersMS_OrderType         `protobuf:"varint,6,opt,name=OrderType,proto3,enum=usr.UsersMS_OrderType" json:"OrderType,omitempty"`
}

func (x *RequestUsersHistory) Reset() {
	*x = RequestUsersHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUsersHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUsersHistory) ProtoMessage() {}

func (x *RequestUsersHistory) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUsersHistory.ProtoReflect.Descriptor instead.
func (*RequestUsersHistory) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{2}
}

func (x *RequestUsersHistory) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestUsersHistory) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUsersHistory) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RequestUsersHistory) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestUsersHistory) GetOrder() UsersMS_UsersHistoryOrder {
	if x != nil {
		return x.Order
	}
	return UsersMS_UsersHistoryOrder_BY_USERS_HISTORY_ID
}

func (x *RequestUsersHistory) GetOrderType() UsersMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return UsersMS_OrderType_ASC
}

// =============== //
//
//	Users roles   //
//
// =============== //
type RequestUsersRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken     string                  `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AuthorId      uint64                  `protobuf:"fixed64,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Id            uint64                  `protobuf:"fixed64,3,opt,name=Id,proto3" json:"Id,omitempty"`
	Name          string                  `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Comment       string                  `protobuf:"bytes,5,opt,name=Comment,proto3" json:"Comment,omitempty"`
	RoleIsDeleted UsersMS_Bool            `protobuf:"varint,6,opt,name=RoleIsDeleted,proto3,enum=usr.UsersMS_Bool" json:"RoleIsDeleted,omitempty"`
	Order         UsersMS_UsersRolesOrder `protobuf:"varint,7,opt,name=Order,proto3,enum=usr.UsersMS_UsersRolesOrder" json:"Order,omitempty"`
	OrderType     UsersMS_OrderType       `protobuf:"varint,8,opt,name=OrderType,proto3,enum=usr.UsersMS_OrderType" json:"OrderType,omitempty"`
}

func (x *RequestUsersRoles) Reset() {
	*x = RequestUsersRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUsersRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUsersRoles) ProtoMessage() {}

func (x *RequestUsersRoles) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUsersRoles.ProtoReflect.Descriptor instead.
func (*RequestUsersRoles) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{3}
}

func (x *RequestUsersRoles) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestUsersRoles) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestUsersRoles) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUsersRoles) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestUsersRoles) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RequestUsersRoles) GetRoleIsDeleted() UsersMS_Bool {
	if x != nil {
		return x.RoleIsDeleted
	}
	return UsersMS_Bool_IS_ANY
}

func (x *RequestUsersRoles) GetOrder() UsersMS_UsersRolesOrder {
	if x != nil {
		return x.Order
	}
	return UsersMS_UsersRolesOrder_BY_USER_ROLE_ID
}

func (x *RequestUsersRoles) GetOrderType() UsersMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return UsersMS_OrderType_ASC
}

// =============== //
// Tables names    //
// =============== //
type RequestTables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string  `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	RelKind   RelKind `protobuf:"varint,2,opt,name=RelKind,proto3,enum=usr.RelKind" json:"RelKind,omitempty"`
}

func (x *RequestTables) Reset() {
	*x = RequestTables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTables) ProtoMessage() {}

func (x *RequestTables) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTables.ProtoReflect.Descriptor instead.
func (*RequestTables) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{4}
}

func (x *RequestTables) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestTables) GetRelKind() RelKind {
	if x != nil {
		return x.RelKind
	}
	return RelKind_ONLY_TABLES
}

// =================== //
// Users access rights //
// =================== //
type RequestUsersAccessRights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string                         `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	Id        uint64                         `protobuf:"fixed64,2,opt,name=Id,proto3" json:"Id,omitempty"`
	RoleId    uint64                         `protobuf:"fixed64,3,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
	TableName string                         `protobuf:"bytes,4,opt,name=TableName,proto3" json:"TableName,omitempty"`
	CanSelect bool                           `protobuf:"varint,5,opt,name=CanSelect,proto3" json:"CanSelect,omitempty"`
	CanInsert bool                           `protobuf:"varint,6,opt,name=CanInsert,proto3" json:"CanInsert,omitempty"`
	CanUpdate bool                           `protobuf:"varint,7,opt,name=CanUpdate,proto3" json:"CanUpdate,omitempty"`
	CanDelete bool                           `protobuf:"varint,8,opt,name=CanDelete,proto3" json:"CanDelete,omitempty"`
	AuthorId  uint64                         `protobuf:"fixed64,9,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	IsDeleted UsersMS_Bool                   `protobuf:"varint,10,opt,name=IsDeleted,proto3,enum=usr.UsersMS_Bool" json:"IsDeleted,omitempty"`
	Order     UsersMS_UsersAccessRightsOrder `protobuf:"varint,11,opt,name=Order,proto3,enum=usr.UsersMS_UsersAccessRightsOrder" json:"Order,omitempty"`
	OrderType UsersMS_OrderType              `protobuf:"varint,12,opt,name=OrderType,proto3,enum=usr.UsersMS_OrderType" json:"OrderType,omitempty"`
}

func (x *RequestUsersAccessRights) Reset() {
	*x = RequestUsersAccessRights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUsersAccessRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUsersAccessRights) ProtoMessage() {}

func (x *RequestUsersAccessRights) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUsersAccessRights.ProtoReflect.Descriptor instead.
func (*RequestUsersAccessRights) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{5}
}

func (x *RequestUsersAccessRights) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestUsersAccessRights) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestUsersAccessRights) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RequestUsersAccessRights) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *RequestUsersAccessRights) GetCanSelect() bool {
	if x != nil {
		return x.CanSelect
	}
	return false
}

func (x *RequestUsersAccessRights) GetCanInsert() bool {
	if x != nil {
		return x.CanInsert
	}
	return false
}

func (x *RequestUsersAccessRights) GetCanUpdate() bool {
	if x != nil {
		return x.CanUpdate
	}
	return false
}

func (x *RequestUsersAccessRights) GetCanDelete() bool {
	if x != nil {
		return x.CanDelete
	}
	return false
}

func (x *RequestUsersAccessRights) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *RequestUsersAccessRights) GetIsDeleted() UsersMS_Bool {
	if x != nil {
		return x.IsDeleted
	}
	return UsersMS_Bool_IS_ANY
}

func (x *RequestUsersAccessRights) GetOrder() UsersMS_UsersAccessRightsOrder {
	if x != nil {
		return x.Order
	}
	return UsersMS_UsersAccessRightsOrder_BY_USERS_ACCESS_RIGHTS_ID
}

func (x *RequestUsersAccessRights) GetOrderType() UsersMS_OrderType {
	if x != nil {
		return x.OrderType
	}
	return UsersMS_OrderType_ASC
}

type UsersAccessRightsMultiple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"fixed64,1,opt,name=Id,proto3" json:"Id,omitempty"`
	RoleId    uint64 `protobuf:"fixed64,2,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
	TableName string `protobuf:"bytes,3,opt,name=TableName,proto3" json:"TableName,omitempty"`
	CanSelect bool   `protobuf:"varint,4,opt,name=CanSelect,proto3" json:"CanSelect,omitempty"`
	CanInsert bool   `protobuf:"varint,5,opt,name=CanInsert,proto3" json:"CanInsert,omitempty"`
	CanUpdate bool   `protobuf:"varint,6,opt,name=CanUpdate,proto3" json:"CanUpdate,omitempty"`
	CanDelete bool   `protobuf:"varint,7,opt,name=CanDelete,proto3" json:"CanDelete,omitempty"`
	Isdeleted bool   `protobuf:"varint,8,opt,name=Isdeleted,proto3" json:"Isdeleted,omitempty"`
	AuthorId  uint64 `protobuf:"fixed64,9,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
}

func (x *UsersAccessRightsMultiple) Reset() {
	*x = UsersAccessRightsMultiple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersAccessRightsMultiple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersAccessRightsMultiple) ProtoMessage() {}

func (x *UsersAccessRightsMultiple) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersAccessRightsMultiple.ProtoReflect.Descriptor instead.
func (*UsersAccessRightsMultiple) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{6}
}

func (x *UsersAccessRightsMultiple) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UsersAccessRightsMultiple) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UsersAccessRightsMultiple) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UsersAccessRightsMultiple) GetCanSelect() bool {
	if x != nil {
		return x.CanSelect
	}
	return false
}

func (x *UsersAccessRightsMultiple) GetCanInsert() bool {
	if x != nil {
		return x.CanInsert
	}
	return false
}

func (x *UsersAccessRightsMultiple) GetCanUpdate() bool {
	if x != nil {
		return x.CanUpdate
	}
	return false
}

func (x *UsersAccessRightsMultiple) GetCanDelete() bool {
	if x != nil {
		return x.CanDelete
	}
	return false
}

func (x *UsersAccessRightsMultiple) GetIsdeleted() bool {
	if x != nil {
		return x.Isdeleted
	}
	return false
}

func (x *UsersAccessRightsMultiple) GetAuthorId() uint64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type RequestUsersAccessRightsMultiple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken         string                       `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	UsersAccessRights []*UsersAccessRightsMultiple `protobuf:"bytes,3,rep,name=UsersAccessRights,proto3" json:"UsersAccessRights,omitempty"`
}

func (x *RequestUsersAccessRightsMultiple) Reset() {
	*x = RequestUsersAccessRightsMultiple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUsersAccessRightsMultiple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUsersAccessRightsMultiple) ProtoMessage() {}

func (x *RequestUsersAccessRightsMultiple) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUsersAccessRightsMultiple.ProtoReflect.Descriptor instead.
func (*RequestUsersAccessRightsMultiple) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{7}
}

func (x *RequestUsersAccessRightsMultiple) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestUsersAccessRightsMultiple) GetUsersAccessRights() []*UsersAccessRightsMultiple {
	if x != nil {
		return x.UsersAccessRights
	}
	return nil
}

// =================== //
// UAR for tables      //
// =================== //
type RequestUsersAccessRightsForTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string                    `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	UserId    uint64                    `protobuf:"fixed64,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TableName string                    `protobuf:"bytes,3,opt,name=TableName,proto3" json:"TableName,omitempty"`
	Action    UsersAccessRights_Actions `protobuf:"varint,4,opt,name=Action,proto3,enum=usr.UsersAccessRights_Actions" json:"Action,omitempty"`
}

func (x *RequestUsersAccessRightsForTable) Reset() {
	*x = RequestUsersAccessRightsForTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUsersAccessRightsForTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUsersAccessRightsForTable) ProtoMessage() {}

func (x *RequestUsersAccessRightsForTable) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUsersAccessRightsForTable.ProtoReflect.Descriptor instead.
func (*RequestUsersAccessRightsForTable) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{8}
}

func (x *RequestUsersAccessRightsForTable) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *RequestUsersAccessRightsForTable) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RequestUsersAccessRightsForTable) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *RequestUsersAccessRightsForTable) GetAction() UsersAccessRights_Actions {
	if x != nil {
		return x.Action
	}
	return UsersAccessRights_Actions_CAN_SELECT
}

// =============== //
//
//	Status        //
//
// =============== //
type UsersMS_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *UsersMS_Status) Reset() {
	*x = UsersMS_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersMS_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersMS_Status) ProtoMessage() {}

func (x *UsersMS_Status) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersMS_Status.ProtoReflect.Descriptor instead.
func (*UsersMS_Status) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{9}
}

func (x *UsersMS_Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UsersMS_Status) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// =============== //
//
//	Users         //
//
// =============== //
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"user_id"
	ID uint64 `protobuf:"fixed64,1,opt,name=ID,proto3" json:"ID,omitempty" db:"user_id"`
	// @gotags: db:"user_firstname"
	FirstName string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty" db:"user_firstname"`
	// @gotags: db:"user_middlename"
	MiddleName string `protobuf:"bytes,3,opt,name=MiddleName,proto3" json:"MiddleName,omitempty" db:"user_middlename"`
	// @gotags: db:"user_lastname"
	LastName string `protobuf:"bytes,4,opt,name=LastName,proto3" json:"LastName,omitempty" db:"user_lastname"`
	// @gotags: db:"user_fullname"
	FullName string `protobuf:"bytes,5,opt,name=FullName,proto3" json:"FullName,omitempty" db:"user_fullname"`
	// @gotags: db:"user_login"
	Login string `protobuf:"bytes,6,opt,name=Login,proto3" json:"Login,omitempty" db:"user_login"`
	// @gotags: db:"user_password"
	Password string `protobuf:"bytes,7,opt,name=Password,proto3" json:"Password,omitempty" db:"user_password"`
	// @gotags: db:"user_phone"
	Phone string `protobuf:"bytes,8,opt,name=Phone,proto3" json:"Phone,omitempty" db:"user_phone"`
	// @gotags: db:"user_phone_internal"
	PhoneInternal string `protobuf:"bytes,9,opt,name=PhoneInternal,proto3" json:"PhoneInternal,omitempty" db:"user_phone_internal"`
	// @gotags: db:"user_comment"
	Comment string `protobuf:"bytes,10,opt,name=Comment,proto3" json:"Comment,omitempty" db:"user_comment"`
	// @gotags: db:"user_isdeleted"
	IsDeleted bool `protobuf:"varint,11,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"user_isdeleted"`
	// @gotags: db:"user_created_at"
	CreatedAt string `protobuf:"bytes,12,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"user_created_at"`
	// @gotags: db:"user_created_by"
	CreatedBy uint64 `protobuf:"fixed64,13,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"user_created_by"`
	// @gotags: db:"user_created_by_name"
	CreatedByName string `protobuf:"bytes,14,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"user_created_by_name"`
	// @gotags: db:"user_updated_at"
	UpdatedAt string `protobuf:"bytes,15,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" db:"user_updated_at"`
	// @gotags: db:"user_updated_by"
	UpdatedBy uint64 `protobuf:"fixed64,16,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty" db:"user_updated_by"`
	// @gotags: db:"user_updated_by_name"
	UpdatedByName string `protobuf:"bytes,17,opt,name=UpdatedByName,proto3" json:"UpdatedByName,omitempty" db:"user_updated_by_name"`
	// @gotags: db:"user_role_id"
	RoleId uint64 `protobuf:"fixed64,18,opt,name=RoleId,proto3" json:"RoleId,omitempty" db:"user_role_id"`
	// @gotags: db:"user_role_name"
	RoleName string `protobuf:"bytes,19,opt,name=RoleName,proto3" json:"RoleName,omitempty" db:"user_role_name"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetPhoneInternal() string {
	if x != nil {
		return x.PhoneInternal
	}
	return ""
}

func (x *User) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *User) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *User) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *User) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *User) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *User) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *User) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *User) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *User) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *User) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type ResponseUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users  []*User         `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
	Status *UsersMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseUsers) Reset() {
	*x = ResponseUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUsers) ProtoMessage() {}

func (x *ResponseUsers) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUsers.ProtoReflect.Descriptor instead.
func (*ResponseUsers) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseUsers) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ResponseUsers) GetStatus() *UsersMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =============== //
//
//	Users history //
//
// =============== //
type UsersHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"user_history_id"
	UserHistoryId uint64 `protobuf:"fixed64,1,opt,name=UserHistoryId,proto3" json:"UserHistoryId,omitempty" db:"user_history_id"`
	// @gotags: db:"user_history_firstname"
	FirstName string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty" db:"user_history_firstname"`
	// @gotags: db:"user_history_middlename"
	MiddleName string `protobuf:"bytes,3,opt,name=MiddleName,proto3" json:"MiddleName,omitempty" db:"user_history_middlename"`
	// @gotags: db:"user_history_lastname"
	LastName string `protobuf:"bytes,4,opt,name=LastName,proto3" json:"LastName,omitempty" db:"user_history_lastname"`
	// @gotags: db:"user_history_login"
	Login string `protobuf:"bytes,5,opt,name=Login,proto3" json:"Login,omitempty" db:"user_history_login"`
	// @gotags: db:"user_history_password"
	Password string `protobuf:"bytes,6,opt,name=Password,proto3" json:"Password,omitempty" db:"user_history_password"`
	// @gotags: db:"user_history_isdeleted"
	IsDeleted bool `protobuf:"varint,7,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"user_history_isdeleted"`
	// @gotags: db:"user_history_fullname"
	FullName string `protobuf:"bytes,8,opt,name=FullName,proto3" json:"FullName,omitempty" db:"user_history_fullname"`
	// @gotags: db:"user_history_created_at"
	CreatedAt string `protobuf:"bytes,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"user_history_created_at"`
	// @gotags: db:"user_history_created_by_name"
	CreatedByName string `protobuf:"bytes,10,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"user_history_created_by_name"`
	// @gotags: db:"user_history_created_by"
	CreatedBy uint64 `protobuf:"fixed64,11,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"user_history_created_by"`
	// @gotags: db:"user_history_phone"
	Phone string `protobuf:"bytes,14,opt,name=Phone,proto3" json:"Phone,omitempty" db:"user_history_phone"`
	// @gotags: db:"user_history_phone_internal"
	PhoneInternal string `protobuf:"bytes,15,opt,name=PhoneInternal,proto3" json:"PhoneInternal,omitempty" db:"user_history_phone_internal"`
	// @gotags: db:"user_history_comment"
	Comment string `protobuf:"bytes,16,opt,name=Comment,proto3" json:"Comment,omitempty" db:"user_history_comment"`
	// @gotags: db:"user_history_role_id"
	RoleId uint64 `protobuf:"fixed64,17,opt,name=RoleId,proto3" json:"RoleId,omitempty" db:"user_history_role_id"`
	// @gotags: db:"user_history_role_name"
	RoleName string `protobuf:"bytes,18,opt,name=RoleName,proto3" json:"RoleName,omitempty" db:"user_history_role_name"`
	// @gotags: db:"user_history_user_id"
	UserId uint64 `protobuf:"fixed64,19,opt,name=UserId,proto3" json:"UserId,omitempty" db:"user_history_user_id"`
}

func (x *UsersHistory) Reset() {
	*x = UsersHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersHistory) ProtoMessage() {}

func (x *UsersHistory) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersHistory.ProtoReflect.Descriptor instead.
func (*UsersHistory) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{12}
}

func (x *UsersHistory) GetUserHistoryId() uint64 {
	if x != nil {
		return x.UserHistoryId
	}
	return 0
}

func (x *UsersHistory) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UsersHistory) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *UsersHistory) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UsersHistory) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UsersHistory) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UsersHistory) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UsersHistory) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UsersHistory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UsersHistory) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *UsersHistory) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UsersHistory) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UsersHistory) GetPhoneInternal() string {
	if x != nil {
		return x.PhoneInternal
	}
	return ""
}

func (x *UsersHistory) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UsersHistory) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UsersHistory) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UsersHistory) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ResponseUsersHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History []*UsersHistory `protobuf:"bytes,1,rep,name=History,proto3" json:"History,omitempty"`
	Status  *UsersMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseUsersHistory) Reset() {
	*x = ResponseUsersHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUsersHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUsersHistory) ProtoMessage() {}

func (x *ResponseUsersHistory) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUsersHistory.ProtoReflect.Descriptor instead.
func (*ResponseUsersHistory) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseUsersHistory) GetHistory() []*UsersHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *ResponseUsersHistory) GetStatus() *UsersMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =============== //
//
//	Users roles   //
//
// =============== //
type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"user_role_id"
	UserRoleId uint64 `protobuf:"fixed64,1,opt,name=UserRoleId,proto3" json:"UserRoleId,omitempty" db:"user_role_id"`
	// @gotags: db:"user_role_name"
	UserRoleName string `protobuf:"bytes,2,opt,name=UserRoleName,proto3" json:"UserRoleName,omitempty" db:"user_role_name"`
	// @gotags: db:"user_role_comment"
	UserRoleComment string `protobuf:"bytes,3,opt,name=UserRoleComment,proto3" json:"UserRoleComment,omitempty" db:"user_role_comment"`
	// @gotags: db:"user_role_created_at"
	UserRoleCreatedAt string `protobuf:"bytes,4,opt,name=UserRoleCreatedAt,proto3" json:"UserRoleCreatedAt,omitempty" db:"user_role_created_at"`
	// @gotags: db:"user_role_created_by"
	UserRoleCreatedBy uint64 `protobuf:"fixed64,5,opt,name=UserRoleCreatedBy,proto3" json:"UserRoleCreatedBy,omitempty" db:"user_role_created_by"`
	// @gotags: db:"user_role_created_by_name"
	UserRoleCreatedByName string `protobuf:"bytes,6,opt,name=UserRoleCreatedByName,proto3" json:"UserRoleCreatedByName,omitempty" db:"user_role_created_by_name"`
	// @gotags: db:"user_role_updated_at"
	UserRoleUpdatedAt string `protobuf:"bytes,7,opt,name=UserRoleUpdatedAt,proto3" json:"UserRoleUpdatedAt,omitempty" db:"user_role_updated_at"`
	// @gotags: db:"user_role_updated_by"
	UserRoleUpdatedBy uint64 `protobuf:"fixed64,8,opt,name=UserRoleUpdatedBy,proto3" json:"UserRoleUpdatedBy,omitempty" db:"user_role_updated_by"`
	// @gotags: db:"user_role_updated_by_name"
	UserRoleUpdatedByName string `protobuf:"bytes,9,opt,name=UserRoleUpdatedByName,proto3" json:"UserRoleUpdatedByName,omitempty" db:"user_role_updated_by_name"`
	// @gotags: db:"user_role_isdeleted"
	UserRoleIsDeleted bool `protobuf:"varint,10,opt,name=UserRoleIsDeleted,proto3" json:"UserRoleIsDeleted,omitempty" db:"user_role_isdeleted"`
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{14}
}

func (x *UserRole) GetUserRoleId() uint64 {
	if x != nil {
		return x.UserRoleId
	}
	return 0
}

func (x *UserRole) GetUserRoleName() string {
	if x != nil {
		return x.UserRoleName
	}
	return ""
}

func (x *UserRole) GetUserRoleComment() string {
	if x != nil {
		return x.UserRoleComment
	}
	return ""
}

func (x *UserRole) GetUserRoleCreatedAt() string {
	if x != nil {
		return x.UserRoleCreatedAt
	}
	return ""
}

func (x *UserRole) GetUserRoleCreatedBy() uint64 {
	if x != nil {
		return x.UserRoleCreatedBy
	}
	return 0
}

func (x *UserRole) GetUserRoleCreatedByName() string {
	if x != nil {
		return x.UserRoleCreatedByName
	}
	return ""
}

func (x *UserRole) GetUserRoleUpdatedAt() string {
	if x != nil {
		return x.UserRoleUpdatedAt
	}
	return ""
}

func (x *UserRole) GetUserRoleUpdatedBy() uint64 {
	if x != nil {
		return x.UserRoleUpdatedBy
	}
	return 0
}

func (x *UserRole) GetUserRoleUpdatedByName() string {
	if x != nil {
		return x.UserRoleUpdatedByName
	}
	return ""
}

func (x *UserRole) GetUserRoleIsDeleted() bool {
	if x != nil {
		return x.UserRoleIsDeleted
	}
	return false
}

type ResponseUsersRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersRoles []*UserRole     `protobuf:"bytes,1,rep,name=UsersRoles,proto3" json:"UsersRoles,omitempty"`
	Status     *UsersMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseUsersRoles) Reset() {
	*x = ResponseUsersRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUsersRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUsersRoles) ProtoMessage() {}

func (x *ResponseUsersRoles) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUsersRoles.ProtoReflect.Descriptor instead.
func (*ResponseUsersRoles) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseUsersRoles) GetUsersRoles() []*UserRole {
	if x != nil {
		return x.UsersRoles
	}
	return nil
}

func (x *ResponseUsersRoles) GetStatus() *UsersMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ResponseUsersRolesWithUar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRole          []*UserRole          `protobuf:"bytes,1,rep,name=UserRole,proto3" json:"UserRole,omitempty"`
	UsersAccessRights []*UsersAccessRights `protobuf:"bytes,2,rep,name=UsersAccessRights,proto3" json:"UsersAccessRights,omitempty"`
	Status            *UsersMS_Status      `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseUsersRolesWithUar) Reset() {
	*x = ResponseUsersRolesWithUar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUsersRolesWithUar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUsersRolesWithUar) ProtoMessage() {}

func (x *ResponseUsersRolesWithUar) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUsersRolesWithUar.ProtoReflect.Descriptor instead.
func (*ResponseUsersRolesWithUar) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseUsersRolesWithUar) GetUserRole() []*UserRole {
	if x != nil {
		return x.UserRole
	}
	return nil
}

func (x *ResponseUsersRolesWithUar) GetUsersAccessRights() []*UsersAccessRights {
	if x != nil {
		return x.UsersAccessRights
	}
	return nil
}

func (x *ResponseUsersRolesWithUar) GetStatus() *UsersMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =============== //
// Tables          //
// =============== //
type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"table_name"
	TableName string `protobuf:"bytes,1,opt,name=TableName,proto3" json:"TableName,omitempty" db:"table_name"`
	// @gotags: db:"table_comment"
	TableComment string `protobuf:"bytes,2,opt,name=TableComment,proto3" json:"TableComment,omitempty" db:"table_comment"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{17}
}

func (x *Table) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Table) GetTableComment() string {
	if x != nil {
		return x.TableComment
	}
	return ""
}

type ResponseTables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*Table        `protobuf:"bytes,1,rep,name=Tables,proto3" json:"Tables,omitempty"`
	Status *UsersMS_Status `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseTables) Reset() {
	*x = ResponseTables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTables) ProtoMessage() {}

func (x *ResponseTables) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseTables.ProtoReflect.Descriptor instead.
func (*ResponseTables) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseTables) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *ResponseTables) GetStatus() *UsersMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// =================== //
// Users access rights //
// =================== //
type UsersAccessRights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"users_access_rights_id"
	Id uint64 `protobuf:"fixed64,1,opt,name=Id,proto3" json:"Id,omitempty" db:"users_access_rights_id"`
	// @gotags: db:"users_access_rights_role_id"
	RoleId uint64 `protobuf:"fixed64,2,opt,name=RoleId,proto3" json:"RoleId,omitempty" db:"users_access_rights_role_id"`
	// @gotags: db:"users_access_rights_role_name"
	RoleName string `protobuf:"bytes,3,opt,name=RoleName,proto3" json:"RoleName,omitempty" db:"users_access_rights_role_name"`
	// @gotags: db:"users_access_rights_table_name"
	TableName string `protobuf:"bytes,4,opt,name=TableName,proto3" json:"TableName,omitempty" db:"users_access_rights_table_name"`
	// @gotags: db:"users_access_rights_can_auth"
	CanAuth bool `protobuf:"varint,5,opt,name=CanAuth,proto3" json:"CanAuth,omitempty" db:"users_access_rights_can_auth"` //only fo table users
	// @gotags: db:"users_access_rights_can_select"
	CanSelect bool `protobuf:"varint,6,opt,name=CanSelect,proto3" json:"CanSelect,omitempty" db:"users_access_rights_can_select"`
	// @gotags: db:"users_access_rights_can_insert"
	CanInsert bool `protobuf:"varint,7,opt,name=CanInsert,proto3" json:"CanInsert,omitempty" db:"users_access_rights_can_insert"`
	// @gotags: db:"users_access_rights_can_update"
	CanUpdate bool `protobuf:"varint,8,opt,name=CanUpdate,proto3" json:"CanUpdate,omitempty" db:"users_access_rights_can_update"`
	// @gotags: db:"users_access_rights_can_delete"
	CanDelete bool `protobuf:"varint,9,opt,name=CanDelete,proto3" json:"CanDelete,omitempty" db:"users_access_rights_can_delete"`
	// @gotags: db:"users_access_rights_created_at"
	CreatedAt string `protobuf:"bytes,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" db:"users_access_rights_created_at"`
	// @gotags: db:"users_access_rights_created_by"
	CreatedBy uint64 `protobuf:"fixed64,11,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" db:"users_access_rights_created_by"`
	// @gotags: db:"users_access_rights_created_by_name"
	CreatedByName string `protobuf:"bytes,12,opt,name=CreatedByName,proto3" json:"CreatedByName,omitempty" db:"users_access_rights_created_by_name"`
	// @gotags: db:"users_access_rights_updated_at"
	UpdatedAt string `protobuf:"bytes,13,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty" db:"users_access_rights_updated_at"`
	// @gotags: db:"users_access_rights_updated_by"
	UpdatedBy uint64 `protobuf:"fixed64,14,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty" db:"users_access_rights_updated_by"`
	// @gotags: db:"users_access_rights_updated_by_name"
	UpdatedByName string `protobuf:"bytes,15,opt,name=UpdatedByName,proto3" json:"UpdatedByName,omitempty" db:"users_access_rights_updated_by_name"`
	// @gotags: db:"users_access_rights_isdeleted"
	IsDeleted bool `protobuf:"varint,16,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty" db:"users_access_rights_isdeleted"`
}

func (x *UsersAccessRights) Reset() {
	*x = UsersAccessRights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersAccessRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersAccessRights) ProtoMessage() {}

func (x *UsersAccessRights) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersAccessRights.ProtoReflect.Descriptor instead.
func (*UsersAccessRights) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{19}
}

func (x *UsersAccessRights) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UsersAccessRights) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UsersAccessRights) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UsersAccessRights) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UsersAccessRights) GetCanAuth() bool {
	if x != nil {
		return x.CanAuth
	}
	return false
}

func (x *UsersAccessRights) GetCanSelect() bool {
	if x != nil {
		return x.CanSelect
	}
	return false
}

func (x *UsersAccessRights) GetCanInsert() bool {
	if x != nil {
		return x.CanInsert
	}
	return false
}

func (x *UsersAccessRights) GetCanUpdate() bool {
	if x != nil {
		return x.CanUpdate
	}
	return false
}

func (x *UsersAccessRights) GetCanDelete() bool {
	if x != nil {
		return x.CanDelete
	}
	return false
}

func (x *UsersAccessRights) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UsersAccessRights) GetCreatedBy() uint64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *UsersAccessRights) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *UsersAccessRights) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UsersAccessRights) GetUpdatedBy() uint64 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *UsersAccessRights) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *UsersAccessRights) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type ResponseUsersAccessRights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersAccessRights []*UsersAccessRights `protobuf:"bytes,1,rep,name=UsersAccessRights,proto3" json:"UsersAccessRights,omitempty"`
	Status            *UsersMS_Status      `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseUsersAccessRights) Reset() {
	*x = ResponseUsersAccessRights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUsersAccessRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUsersAccessRights) ProtoMessage() {}

func (x *ResponseUsersAccessRights) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUsersAccessRights.ProtoReflect.Descriptor instead.
func (*ResponseUsersAccessRights) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseUsersAccessRights) GetUsersAccessRights() []*UsersAccessRights {
	if x != nil {
		return x.UsersAccessRights
	}
	return nil
}

func (x *ResponseUsersAccessRights) GetStatus() *UsersMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// ============================= //
// Users Access Rights For Table //
// ============================= //
type UsersAccessRightsForTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: db:"user_id"
	UserId uint64 `protobuf:"fixed64,1,opt,name=UserId,proto3" json:"UserId,omitempty" db:"user_id"`
	// @gotags: db:"table_name"
	TableName string `protobuf:"bytes,2,opt,name=TableName,proto3" json:"TableName,omitempty" db:"table_name"`
	// @gotags: db:"field_name"
	Action string `protobuf:"bytes,3,opt,name=Action,proto3" json:"Action,omitempty" db:"field_name"`
	// @gotags: db:"result"
	Result bool `protobuf:"varint,4,opt,name=Result,proto3" json:"Result,omitempty" db:"result"`
}

func (x *UsersAccessRightsForTable) Reset() {
	*x = UsersAccessRightsForTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersAccessRightsForTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersAccessRightsForTable) ProtoMessage() {}

func (x *UsersAccessRightsForTable) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersAccessRightsForTable.ProtoReflect.Descriptor instead.
func (*UsersAccessRightsForTable) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{21}
}

func (x *UsersAccessRightsForTable) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UsersAccessRightsForTable) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UsersAccessRightsForTable) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *UsersAccessRightsForTable) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ResponseUsersAccessRightsForTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersAccessRightsForTable *UsersAccessRightsForTable `protobuf:"bytes,1,opt,name=UsersAccessRightsForTable,proto3" json:"UsersAccessRightsForTable,omitempty"`
	Status                    *UsersMS_Status            `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ResponseUsersAccessRightsForTable) Reset() {
	*x = ResponseUsersAccessRightsForTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_users_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUsersAccessRightsForTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUsersAccessRightsForTable) ProtoMessage() {}

func (x *ResponseUsersAccessRightsForTable) ProtoReflect() protoreflect.Message {
	mi := &file_users_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUsersAccessRightsForTable.ProtoReflect.Descriptor instead.
func (*ResponseUsersAccessRightsForTable) Descriptor() ([]byte, []int) {
	return file_users_proto_rawDescGZIP(), []int{22}
}

func (x *ResponseUsersAccessRightsForTable) GetUsersAccessRightsForTable() *UsersAccessRightsForTable {
	if x != nil {
		return x.UsersAccessRightsForTable
	}
	return nil
}

func (x *ResponseUsersAccessRightsForTable) GetStatus() *UsersMS_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_users_proto protoreflect.FileDescriptor

var file_users_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x75,
	0x73, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x06, 0x52, 0x03, 0x49, 0x64, 0x73, 0x22, 0x97, 0x04, 0x0a, 0x0b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x75, 0x73,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09,
	0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x75, 0x73,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c,
	0x52, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x32, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x0d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x4b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x72, 0x2e,
	0x52, 0x65, 0x6c, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x07, 0x52, 0x65, 0x6c, 0x4b, 0x69, 0x6e, 0x64,
	0x22, 0xb4, 0x03, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x43, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x43, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x4d, 0x53, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x4d, 0x53, 0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x61, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x43, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x61,
	0x6e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x8e, 0x01,
	0x0a, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x4c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0xae,
	0x01, 0x0a, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x46, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x04, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xfe, 0x03, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x07,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xca, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x34, 0x0a,
	0x15, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x34, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x70, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x55, 0x61, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x44,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x52, 0x11, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x49, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x75, 0x73, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53,
	0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xe9, 0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x61, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x6e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x43, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x43, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x19,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12,
	0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x81, 0x01, 0x0a,
	0x19, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xae, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f,
	0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x19, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x4d, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2a, 0x35, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x42, 0x6f, 0x6f,
	0x6c, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x53, 0x5f, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x53, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x53, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x02, 0x2a, 0x64, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x4d, 0x53, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x0a, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x2a, 0x73,
	0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x13, 0x42,
	0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53,
	0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44,
	0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x48,
	0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41,
	0x54, 0x10, 0x02, 0x2a, 0x45, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13,
	0x0a, 0x0f, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x2a, 0xd8, 0x01, 0x0a, 0x1e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x4d, 0x53, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x19, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x53, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e,
	0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f,
	0x52, 0x49, 0x47, 0x48, 0x54, 0x53, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x01,
	0x12, 0x25, 0x0a, 0x21, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x41, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x53, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x42, 0x59, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54,
	0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x25,
	0x0a, 0x21, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x41, 0x54, 0x10, 0x04, 0x2a, 0x26, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4d, 0x53,
	0x5f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x2a, 0x40, 0x0a,
	0x07, 0x52, 0x65, 0x6c, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x4e, 0x4c, 0x59,
	0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x4c,
	0x59, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x53, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x53, 0x10, 0x02, 0x2a,
	0x69, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x41, 0x4e, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x41, 0x4e, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x41, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x41, 0x4e, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x41, 0x4e, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x04, 0x32, 0x8c, 0x0b, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x75,
	0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x12,
	0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x75,
	0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x18, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x17, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x16, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x17,
	0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x32, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x19, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x55, 0x61, 0x72, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x75, 0x73, 0x72, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x13, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x75,
	0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x1a, 0x1e, 0x2e, 0x75, 0x73,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x1a,
	0x1e, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22,
	0x00, 0x12, 0x62, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x75,
	0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x19, 0x2e,
	0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x1a,
	0x26, 0x2e, 0x75, 0x73, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_users_proto_rawDescOnce sync.Once
	file_users_proto_rawDescData = file_users_proto_rawDesc
)

func file_users_proto_rawDescGZIP() []byte {
	file_users_proto_rawDescOnce.Do(func() {
		file_users_proto_rawDescData = protoimpl.X.CompressGZIP(file_users_proto_rawDescData)
	})
	return file_users_proto_rawDescData
}

var file_users_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_users_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_users_proto_goTypes = []interface{}{
	(UsersMS_Bool)(0),                         // 0: usr.UsersMS_Bool
	(UsersMS_UsersOrder)(0),                   // 1: usr.UsersMS_UsersOrder
	(UsersMS_UsersHistoryOrder)(0),            // 2: usr.UsersMS_UsersHistoryOrder
	(UsersMS_UsersRolesOrder)(0),              // 3: usr.UsersMS_UsersRolesOrder
	(UsersMS_UsersAccessRightsOrder)(0),       // 4: usr.UsersMS_UsersAccessRightsOrder
	(UsersMS_OrderType)(0),                    // 5: usr.UsersMS_OrderType
	(RelKind)(0),                              // 6: usr.RelKind
	(UsersAccessRights_Actions)(0),            // 7: usr.UsersAccessRights_Actions
	(*RequestDeletionFlags)(nil),              // 8: usr.RequestDeletionFlags
	(*RequestUser)(nil),                       // 9: usr.RequestUser
	(*RequestUsersHistory)(nil),               // 10: usr.RequestUsersHistory
	(*RequestUsersRoles)(nil),                 // 11: usr.RequestUsersRoles
	(*RequestTables)(nil),                     // 12: usr.RequestTables
	(*RequestUsersAccessRights)(nil),          // 13: usr.RequestUsersAccessRights
	(*UsersAccessRightsMultiple)(nil),         // 14: usr.UsersAccessRightsMultiple
	(*RequestUsersAccessRightsMultiple)(nil),  // 15: usr.RequestUsersAccessRightsMultiple
	(*RequestUsersAccessRightsForTable)(nil),  // 16: usr.RequestUsersAccessRightsForTable
	(*UsersMS_Status)(nil),                    // 17: usr.UsersMS_Status
	(*User)(nil),                              // 18: usr.User
	(*ResponseUsers)(nil),                     // 19: usr.ResponseUsers
	(*UsersHistory)(nil),                      // 20: usr.UsersHistory
	(*ResponseUsersHistory)(nil),              // 21: usr.ResponseUsersHistory
	(*UserRole)(nil),                          // 22: usr.UserRole
	(*ResponseUsersRoles)(nil),                // 23: usr.ResponseUsersRoles
	(*ResponseUsersRolesWithUar)(nil),         // 24: usr.ResponseUsersRolesWithUar
	(*Table)(nil),                             // 25: usr.Table
	(*ResponseTables)(nil),                    // 26: usr.ResponseTables
	(*UsersAccessRights)(nil),                 // 27: usr.UsersAccessRights
	(*ResponseUsersAccessRights)(nil),         // 28: usr.ResponseUsersAccessRights
	(*UsersAccessRightsForTable)(nil),         // 29: usr.UsersAccessRightsForTable
	(*ResponseUsersAccessRightsForTable)(nil), // 30: usr.ResponseUsersAccessRightsForTable
}
var file_users_proto_depIdxs = []int32{
	0,  // 0: usr.RequestDeletionFlags.IsDeleted:type_name -> usr.UsersMS_Bool
	0,  // 1: usr.RequestUser.IsDeleted:type_name -> usr.UsersMS_Bool
	1,  // 2: usr.RequestUser.UsersOrder:type_name -> usr.UsersMS_UsersOrder
	5,  // 3: usr.RequestUser.UsersOrderType:type_name -> usr.UsersMS_OrderType
	2,  // 4: usr.RequestUsersHistory.Order:type_name -> usr.UsersMS_UsersHistoryOrder
	5,  // 5: usr.RequestUsersHistory.OrderType:type_name -> usr.UsersMS_OrderType
	0,  // 6: usr.RequestUsersRoles.RoleIsDeleted:type_name -> usr.UsersMS_Bool
	3,  // 7: usr.RequestUsersRoles.Order:type_name -> usr.UsersMS_UsersRolesOrder
	5,  // 8: usr.RequestUsersRoles.OrderType:type_name -> usr.UsersMS_OrderType
	6,  // 9: usr.RequestTables.RelKind:type_name -> usr.RelKind
	0,  // 10: usr.RequestUsersAccessRights.IsDeleted:type_name -> usr.UsersMS_Bool
	4,  // 11: usr.RequestUsersAccessRights.Order:type_name -> usr.UsersMS_UsersAccessRightsOrder
	5,  // 12: usr.RequestUsersAccessRights.OrderType:type_name -> usr.UsersMS_OrderType
	14, // 13: usr.RequestUsersAccessRightsMultiple.UsersAccessRights:type_name -> usr.UsersAccessRightsMultiple
	7,  // 14: usr.RequestUsersAccessRightsForTable.Action:type_name -> usr.UsersAccessRights_Actions
	18, // 15: usr.ResponseUsers.Users:type_name -> usr.User
	17, // 16: usr.ResponseUsers.Status:type_name -> usr.UsersMS_Status
	20, // 17: usr.ResponseUsersHistory.History:type_name -> usr.UsersHistory
	17, // 18: usr.ResponseUsersHistory.Status:type_name -> usr.UsersMS_Status
	22, // 19: usr.ResponseUsersRoles.UsersRoles:type_name -> usr.UserRole
	17, // 20: usr.ResponseUsersRoles.Status:type_name -> usr.UsersMS_Status
	22, // 21: usr.ResponseUsersRolesWithUar.UserRole:type_name -> usr.UserRole
	27, // 22: usr.ResponseUsersRolesWithUar.UsersAccessRights:type_name -> usr.UsersAccessRights
	17, // 23: usr.ResponseUsersRolesWithUar.Status:type_name -> usr.UsersMS_Status
	25, // 24: usr.ResponseTables.Tables:type_name -> usr.Table
	17, // 25: usr.ResponseTables.Status:type_name -> usr.UsersMS_Status
	27, // 26: usr.ResponseUsersAccessRights.UsersAccessRights:type_name -> usr.UsersAccessRights
	17, // 27: usr.ResponseUsersAccessRights.Status:type_name -> usr.UsersMS_Status
	29, // 28: usr.ResponseUsersAccessRightsForTable.UsersAccessRightsForTable:type_name -> usr.UsersAccessRightsForTable
	17, // 29: usr.ResponseUsersAccessRightsForTable.Status:type_name -> usr.UsersMS_Status
	9,  // 30: usr.UsersServices.AuthUser:input_type -> usr.RequestUser
	9,  // 31: usr.UsersServices.GetUsers:input_type -> usr.RequestUser
	9,  // 32: usr.UsersServices.CreateUser:input_type -> usr.RequestUser
	9,  // 33: usr.UsersServices.UpdateUser:input_type -> usr.RequestUser
	8,  // 34: usr.UsersServices.UpdateUsersDeletionFlags:input_type -> usr.RequestDeletionFlags
	10, // 35: usr.UsersServices.GetUsersHistory:input_type -> usr.RequestUsersHistory
	10, // 36: usr.UsersServices.DeleteUsersHistory:input_type -> usr.RequestUsersHistory
	11, // 37: usr.UsersServices.GetUsersRoles:input_type -> usr.RequestUsersRoles
	11, // 38: usr.UsersServices.CreateUserRole:input_type -> usr.RequestUsersRoles
	11, // 39: usr.UsersServices.UpdateUserRole:input_type -> usr.RequestUsersRoles
	8,  // 40: usr.UsersServices.UpdateUsersRolesDeletionFlags:input_type -> usr.RequestDeletionFlags
	8,  // 41: usr.UsersServices.UpdateUsersRolesWithUsersAccessRightsDeletionFlags:input_type -> usr.RequestDeletionFlags
	12, // 42: usr.UsersServices.GetTables:input_type -> usr.RequestTables
	13, // 43: usr.UsersServices.GetUsersAccessRights:input_type -> usr.RequestUsersAccessRights
	15, // 44: usr.UsersServices.CreateUsersAccessRights:input_type -> usr.RequestUsersAccessRightsMultiple
	15, // 45: usr.UsersServices.UpdateUsersAccessRights:input_type -> usr.RequestUsersAccessRightsMultiple
	8,  // 46: usr.UsersServices.UpdateUsersAccessRightsDeletionFlags:input_type -> usr.RequestDeletionFlags
	16, // 47: usr.UsersServices.GetUserAccessRightForTable:input_type -> usr.RequestUsersAccessRightsForTable
	19, // 48: usr.UsersServices.AuthUser:output_type -> usr.ResponseUsers
	19, // 49: usr.UsersServices.GetUsers:output_type -> usr.ResponseUsers
	19, // 50: usr.UsersServices.CreateUser:output_type -> usr.ResponseUsers
	19, // 51: usr.UsersServices.UpdateUser:output_type -> usr.ResponseUsers
	19, // 52: usr.UsersServices.UpdateUsersDeletionFlags:output_type -> usr.ResponseUsers
	21, // 53: usr.UsersServices.GetUsersHistory:output_type -> usr.ResponseUsersHistory
	21, // 54: usr.UsersServices.DeleteUsersHistory:output_type -> usr.ResponseUsersHistory
	23, // 55: usr.UsersServices.GetUsersRoles:output_type -> usr.ResponseUsersRoles
	23, // 56: usr.UsersServices.CreateUserRole:output_type -> usr.ResponseUsersRoles
	23, // 57: usr.UsersServices.UpdateUserRole:output_type -> usr.ResponseUsersRoles
	23, // 58: usr.UsersServices.UpdateUsersRolesDeletionFlags:output_type -> usr.ResponseUsersRoles
	24, // 59: usr.UsersServices.UpdateUsersRolesWithUsersAccessRightsDeletionFlags:output_type -> usr.ResponseUsersRolesWithUar
	26, // 60: usr.UsersServices.GetTables:output_type -> usr.ResponseTables
	28, // 61: usr.UsersServices.GetUsersAccessRights:output_type -> usr.ResponseUsersAccessRights
	28, // 62: usr.UsersServices.CreateUsersAccessRights:output_type -> usr.ResponseUsersAccessRights
	28, // 63: usr.UsersServices.UpdateUsersAccessRights:output_type -> usr.ResponseUsersAccessRights
	28, // 64: usr.UsersServices.UpdateUsersAccessRightsDeletionFlags:output_type -> usr.ResponseUsersAccessRights
	30, // 65: usr.UsersServices.GetUserAccessRightForTable:output_type -> usr.ResponseUsersAccessRightsForTable
	48, // [48:66] is the sub-list for method output_type
	30, // [30:48] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_users_proto_init() }
func file_users_proto_init() {
	if File_users_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_users_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDeletionFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUsersHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUsersRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUsersAccessRights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersAccessRightsMultiple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUsersAccessRightsMultiple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUsersAccessRightsForTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersMS_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUsersHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUsersRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUsersRolesWithUar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseTables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersAccessRights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUsersAccessRights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersAccessRightsForTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_users_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUsersAccessRightsForTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_users_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_users_proto_goTypes,
		DependencyIndexes: file_users_proto_depIdxs,
		EnumInfos:         file_users_proto_enumTypes,
		MessageInfos:      file_users_proto_msgTypes,
	}.Build()
	File_users_proto = out.File
	file_users_proto_rawDesc = nil
	file_users_proto_goTypes = nil
	file_users_proto_depIdxs = nil
}
