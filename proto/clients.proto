syntax = "proto3";
option go_package = "internal/api";
package clients;

//***********************************************************************
// Enums
//***********************************************************************

// ============== //
// Boolean fields //
// ============== //

enum ClientsMS_Bool {
  IS_ANY = 0;
  IS_FALSE = 1;
  IS_TRUE = 2;
}

// =============== //
//      Orders     //
// =============== //

//Order type for all entities
enum ClientsMS_OrderType {
  ASC = 0;
  DESC = 1;
}

//Countries
enum ClientsMS_CountryOrder {
  BY_COUNTRY_ID = 0;
  BY_COUNTRY_NAME = 1;
  BY_COUNTRY_CREATED_AT = 2;
  BY_COUNTRY_UPDATED_AT = 3;
}

//Address type
enum ClientsMS_AddressTypesOrder {
  BY_ADDRESS_TYPE_ID = 0;
  BY_ADDRESS_TYPE_NAME = 1;
  BY_ADDRESS_TYPE_CODE = 2;
  BY_ADDRESS_TYPE_CREATED_AT = 3;
  BY_ADDRESS_TYPE_UPDATED_AT = 4;
}

//Deliveries
enum ClientsMS_DeliveriesOrder {
  BY_DELIVERY_ID = 0;
  BY_DELIVERY_NAME = 1;
  BY_DELIVERY_CREATED_AT = 2;
  BY_DELIVERY_UPDATED_AT = 3;
}

//Notes
enum ClientsMS_NotesOrder {
  BY_NOTE_ID = 0;
  BY_NOTE_CREATED_AT = 1;
  BY_NOTE_UPDATED_AT = 2;
}

//Addresses
enum ClientsMS_AddressesOrder {
  BY_ADDRESS_ID = 0;
  BY_ADDRESS_ADDRESS = 1;
  BY_ADDRESS_CREATED_AT = 2;
  BY_ADDRESS_UPDATED_AT = 3;
}

//***********************************************************************
// SERVICES
//***********************************************************************
service ClientsServices {

  // Countries
  rpc GetCountries(RequestCountry) returns (ResponseCountries) {} //pass
  rpc CreateCountry(RequestCountry) returns (ResponseCountries) {} //pass
  rpc UpdateCountry(RequestCountry) returns (ResponseCountries) {} //pass
  rpc UpdateCountriesDeletionFlags(RequestCountriesDeletionFlags) returns (ResponseCountries) {} //pass

  // Address types
  rpc GetAddressesTypes(RequestAddressType) returns (ResponseAddressesTypes) {} //pass
  rpc CreateAddressType(RequestAddressType) returns (ResponseAddressesTypes) {} //pass
  rpc UpdateAddressType(RequestAddressType) returns (ResponseAddressesTypes) {} //pass
  rpc UpdateAddressTypeDeletionFlags(RequestAddressesTypesDeletionFlags) returns (ResponseAddressesTypes) {} //pass

  // Deliveries
  rpc GetDeliveries(RequestDelivery) returns (ResponseDeliveries) {} //pass
  rpc CreateDelivery(RequestDelivery) returns (ResponseDeliveries) {} //pass
  rpc UpdateDelivery(RequestDelivery) returns (ResponseDeliveries) {} //pass
  rpc UpdateDeliveriesDeletionFlags(RequestDeliveriesDeletionFlags) returns (ResponseDeliveries) {} //pass

  // Notes
  rpc GetNotes(RequestNote) returns (ResponseNotes) {} //pass
  rpc CreateNote(RequestNote) returns (ResponseNotes) {} //pass
  rpc UpdateNote(RequestNote) returns (ResponseNotes) {} //pass
  rpc UpdateNotesDeletionFlags(RequestNotesDeletionFlags) returns (ResponseNotes) {} //pass

  // Addresses
  rpc GetAddresses(RequestAddress) returns (ResponseAddresses) {} //pass
  rpc CreateAddress(RequestAddress) returns (ResponseAddresses) {} //pass
  rpc UpdateAddress(RequestAddress) returns (ResponseAddresses) {} //pass
  rpc UpdateAddressesDeletionFlags(RequestAddressesDeletionFlags) returns (ResponseAddresses) {} //pass
}


//***********************************************************************
// Requests
//***********************************************************************


// =============== //
//   Countries     //
// =============== //
message RequestCountry {
  string AuthToken = 1;
  fixed64 Id = 2;
  string Name = 3;
  string Comment = 4;
  ClientsMS_Bool IsDeleted = 5;
  //Order in query
  ClientsMS_CountryOrder Order = 6;
  ClientsMS_OrderType OrderType = 7;
  //AuthorId needed to create and update
  fixed64 AuthorId = 8;
}
message RequestCountriesDeletionFlags {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  ClientsMS_Bool IsDeleted = 3;
  repeated fixed64 Ids = 4;
}

// =============== //
// Address types   //
// =============== //
message RequestAddressType {
  string AuthToken = 1;
  fixed64 Id = 2;
  string Code = 3;
  string Name = 4;
  string Comment = 5;
  ClientsMS_Bool NeedsCleaning = 6;
  ClientsMS_Bool NeedsNormalizing = 7;
  ClientsMS_Bool IsDeleted = 8;
  fixed64 AuthorId = 9;
  ClientsMS_AddressTypesOrder Order = 10;
  ClientsMS_OrderType OrderType = 11;
}
message RequestAddressesTypesDeletionFlags {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  ClientsMS_Bool IsDeleted = 3;
  repeated fixed64 Ids = 4;
}

// =============== //
//   Deliveries     //
// =============== //
message RequestDelivery {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  fixed64 Id = 3;
  string Name = 4;
  string Comment = 5;
  ClientsMS_Bool IsDeleted = 6;
  ClientsMS_DeliveriesOrder Order = 7;
  ClientsMS_OrderType OrderType = 8;
}
message RequestDeliveriesDeletionFlags {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  ClientsMS_Bool IsDeleted = 3;
  repeated fixed64 Ids = 4;
}

// =============== //
//   Notes         //
// =============== //
message RequestNote {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  fixed64 Id = 3;
  fixed64 ClientId = 4;
  string NoteText = 5;
  ClientsMS_Bool IsDeleted = 6;
  ClientsMS_NotesOrder Order = 7;
  ClientsMS_OrderType OrderType = 8;
}
message RequestNotesDeletionFlags {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  ClientsMS_Bool IsDeleted = 3;
  repeated fixed64 Ids = 4;
}

// =============== //
//   Addresses     //
// =============== //
message RequestAddress {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  fixed64 Id = 3;
  string Address = 4;
  fixed64 AddressTypeId = 5;
  fixed64 DeliveryId = 6;
  fixed64 ClientId = 7;
  string PostCode = 8;
  string Timezone = 9;
  fixed64 CountryId = 10;
  string Comment = 11;
  ClientsMS_Bool IsQualityByDadata = 12;
  ClientsMS_Bool IsValidByPost = 13;
  ClientsMS_Bool IsLast = 14;
  ClientsMS_Bool IsDeleted = 15;
  ClientsMS_AddressesOrder Order = 16;
  ClientsMS_OrderType OrderType = 17;
  string AddressJson = 18;
}
message RequestAddressesDeletionFlags {
  string AuthToken = 1;
  fixed64 AuthorId = 2;
  ClientsMS_Bool IsDeleted = 3;
  repeated fixed64 Ids = 4;
}


//***********************************************************************
// Responses
//***********************************************************************

// =============== //
//   Status        //
// =============== //
message ClientsMS_Status {
  int32 Code = 1;
  string Description = 2;
}

// =============== //
//   Countries     //
// =============== //
message Country {
  // @gotags: db:"country_id"
  fixed64 Id = 1;
  // @gotags: db:"country_name"
  string Name = 2;
  // @gotags: db:"country_comment"
  string Comment = 3;
  // @gotags: db:"country_created_at"
  string CreatedAt = 4;
  // @gotags: db:"country_created_by"
  fixed64 CreatedBy = 5;
  // @gotags: db:"country_created_by_name"
  string CreatedByName = 6;
  // @gotags: db:"country_updated_at"
  string UpdatedAt = 7;
  // @gotags: db:"country_updated_by"
  fixed64 UpdatedBy = 8;
  // @gotags: db:"country_updated_by_name"
  string UpdatedByName = 9;
  // @gotags: db:"country_isdeleted"
  bool IsDeleted = 10;
}
message ResponseCountries {
  repeated Country Countries = 1;
  ClientsMS_Status Status = 2;
}

// =============== //
// Address types   //
// =============== //
message AddressType {
  // @gotags: db:"address_type_id"
  fixed64 Id = 1;
  // @gotags: db:"address_type_name"
  string Name = 2;
  // @gotags: db:"address_type_code"
  string Code = 3;
  // @gotags: db:"address_type_comment"
  string Comment = 4;
  // @gotags: db:"address_type_needs_normalizing"
  bool NeedsNormalizing = 5;
  // @gotags: db:"address_type_needs_cleaning"
  bool NeedsCleaning = 6;
  // @gotags: db:"address_type_isdeleted"
  bool IsDeleted = 7;
  // @gotags: db:"address_type_created_at"
  string CreatedAt = 8;
  // @gotags: db:"address_type_created_by"
  fixed64 CreatedBy = 9;
  // @gotags: db:"address_type_created_by_name"
  string CreatedByName = 10;
  // @gotags: db:"address_type_updated_at"
  string UpdatedAt = 11;
  // @gotags: db:"address_type_updated_by"
  fixed64 UpdatedBy = 12;
  // @gotags: db:"address_type_updated_by_name"
  string UpdatedByName = 13;
}
message ResponseAddressesTypes {
  repeated AddressType AddressesTypes = 1;
  ClientsMS_Status Status = 2;
}

// =============== //
//   Deliveries     //
// =============== //
message Delivery {
  // @gotags: db:"delivery_id"
  fixed64 Id = 1;
  // @gotags: db:"delivery_name"
  string Name = 2;
  // @gotags: db:"delivery_comment"
  string Comment = 3;
  // @gotags: db:"delivery_created_at"
  string CreatedAt = 4;
  // @gotags: db:"delivery_created_by"
  fixed64 CreatedBy = 5;
  // @gotags: db:"delivery_created_by_name"
  string CreatedByName = 6;
  // @gotags: db:"delivery_updated_at"
  string UpdatedAt = 7;
  // @gotags: db:"delivery_updated_by"
  fixed64 UpdatedBy = 8;
  // @gotags: db:"delivery_updated_by_name"
  string UpdatedByName = 9;
  // @gotags: db:"delivery_isdeleted"
  bool IsDeleted = 10;
}
message ResponseDeliveries {
  repeated Delivery Deliveries = 1;
  ClientsMS_Status Status = 2;
}

// =============== //
//   Notes         //
// =============== //
message Note {
  // @gotags: db:"note_id"
  fixed64 Id = 1;
  // @gotags: db:"note_client_id"
  fixed64 ClientId = 2;
  // @gotags: db:"note_text"
  string NoteText = 3;
  // @gotags: db:"note_created_at"
  string CreatedAt = 4;
  // @gotags: db:"note_created_by"
  fixed64 CreatedBy = 5;
  // @gotags: db:"note_created_by_name"
  string CreatedByName = 6;
  // @gotags: db:"note_updated_at"
  string UpdatedAt = 7;
  // @gotags: db:"note_updated_by"
  fixed64 UpdatedBy = 8;
  // @gotags: db:"note_updated_by_name"
  string UpdatedByName = 9;
  // @gotags: db:"note_isdeleted"
  bool IsDeleted = 10;
}
message ResponseNotes {
  repeated Note Notes = 1;
  ClientsMS_Status Status = 2;
}

// =============== //
//   Addresses     //
// =============== //
message Address {
  // @gotags: db:"address_id"
  fixed64 Id = 1;
  // @gotags: db:"address_client_id"
  fixed64 ClientId = 2;
  // @gotags: db:"address_delivery_id"
  fixed64 DeliveryId = 3;
  // @gotags: db:"address_delivery_name"
  string DeliveryName = 4;
  // @gotags: db:"address_address"
  string Address = 5;
  // @gotags: db:"address_address_type_id"
  fixed64 AddressTypeId = 6;
  // @gotags: db:"address_address_type_name"
  string AddressTypeName = 7;
  // @gotags: db:"address_postal_code"
  string PostalCode = 8;
  // @gotags: db:"address_timezone"
  string Timezone = 9;
  // @gotags: db:"address_country_id"
  fixed64 CountryId = 10;
  // @gotags: db:"address_country_name"
  string CountryName = 11;
  // @gotags: db:"address_isquality_by_dadata"
  bool IsQualityByDadata = 12;
  // @gotags: db:"address_isvalid_by_post"
  bool IsValidByPost = 13;
  // @gotags: db:"address_islast"
  bool IsLast = 14;
  // @gotags: db:"address_isdeleted"
  bool IsDeleted = 15;
  // @gotags: db:"address_created_at"
  string CreatedAt = 16;
  // @gotags: db:"address_created_by"
  fixed64 CreatedBy = 17;
  // @gotags: db:"address_created_by_name"
  string CreatedByName = 18;
  // @gotags: db:"address_updated_at"
  string UpdatedAt = 19;
  // @gotags: db:"address_updated_by"
  fixed64 UpdatedBy = 20;
  // @gotags: db:"address_updated_by_name"
  string UpdatedByName = 21;
  // @gotags: db:"address_address_json"
  string AddressJson = 22;
  // @gotags: db:"address_comment"
  string Comment = 23;
}
message ResponseAddresses {
  repeated Address Addresses = 1;
  ClientsMS_Status Status = 2;
}

